declare: Set(P23, T2, T1, P21, P0, P3, P28, P27, P22, P25, T0, T3, T5, P30, P58, P24, P2, P4, T4)
#intconstraints:
P58 + -1*P25 != 0 & P58 + -1*P24 != 0 & P58 + -1*P23 != 0 & P58 + -1*P22 != 0 & P58 + -1*P21 != 0 & P58 + -1*P3 != 0 & P30 != 0 & P28 + -1*P25 != 0 & P28 + -1*P24 != 0 & P28 + -1*P23 != 0 & P28 + -1*P22 != 0 & P28 + -1*P21 != 0 & P28 + -1*P3 != 0 & P27 + -1*P25 != 0 & P27 + -1*P24 != 0 & P27 + -1*P23 != 0 & P27 + -1*P22 != 0 & P27 + -1*P21 != 0 & P27 + -1*P3 != 0 & P25 + -1*P21 != 0 & P24 + -1*P21 != 0 & P23 + -1*P22 != 0 & P23 + -1*P21 != 0 & P23 + -1*P3 != 0 & P22 + -1*P21 != 0 & P21 + -1*P3 != 0 & -1*P4 + P2 + -1 >= 0 & P4 >= 0 & P0 + -1 >= 0 & ((P0 + -1) >= 0) & (((((R32 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R32) >= 0)) | (((R32 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R31 + -1 * 1) = 0)) & ((P0 + -1) >= 0) & (((((R30 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R30) >= 0)) | (((R30 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R29 + -1 * 1) = 0)) & ((P0 + -1) >= 0) & (((((R28 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R28) >= 0)) | (((R28 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R27 + -1 * 1) = 0)) & ((P0 + -1) >= 0) & ((((((R26 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R26) >= 0)) | (((R26 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R25 + -1 * 1) = 0)) | ((((-2 >= 0) | ((P0 + -1) = 0)) | ((1 + -1 * P0) >= 0)) & (P2 = 0))) & ((P0 + -1) >= 0) & (((((R24 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R24) >= 0)) | (((R24 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R23 + -1 * 1) = 0)) & ((P0 + -1) >= 0) & (((((R22 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R22) >= 0)) | (((R22 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R21 + -1 * 1) = 0)) & ((P0 + -1) >= 0) & ((((((R20 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R20) >= 0)) | (((R20 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R19 + -1 * 1) = 0)) | ((((-2 >= 0) | ((P0 + -1) = 0)) | ((1 + -1 * P0) >= 0)) & (P2 = 0))) & ((P0 + -1) >= 0) & (((((R18 + -1 * (1 + (P0 + -1))) = 0) & ((P0 + -1 * R18) >= 0)) | (((R18 + -1 * P0) = 0) & ((((1 + (P0 + -1)) + -1 * P2) + -1) >= 0))) & ((R17 + -1 * 1) = 0)) & (((-1 * P4 + P2) + -1) >= 0) & (((((R16 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R16) >= 0)) | (((R16 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * P30) + -1) >= 0))) & ((R15 + -1 * (P4 + 1)) = 0)) & (((-1 * P4 + P2) + -1) >= 0) & ((((((R14 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R14) >= 0)) | (((R14 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * P30) + -1) >= 0))) & ((R13 + -1 * (P4 + 1)) = 0)) | (((((-1 * (P4 + 1) + -1) >= 0) | (((-1 * P4 + P2) + -1) = 0)) | (((P4 + 1) + -1 * P2) >= 0)) & (P30 = 0))) & (((-1 * P4 + P2) + -1) >= 0) & (((((R12 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R12) >= 0)) | (((R12 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * P30) + -1) >= 0))) & ((R11 + -1 * (P4 + 1)) = 0)) & (P4 >= 0) & (((((R10 + -1 * P4) = 0) & ((P2 + -1 * R10) >= 0)) | (((R10 + -1 * P2) = 0) & (((P4 + -1 * T5) + -1) >= 0))) | (((P4 = 0) | (P2 = 0)) & (T5 = 0))) & ((R9 + -1 * T5) = 0) & ((P4 + -1 * R8) = 0) & (P4 >= 0) & ((R7 + -1 * T4) = 0) & ((R6 + -1 * T3) = 0) & ((R5 + -1 * T2) = 0) & ((R4 + -1 * T1) = 0) & ((R3 + -1 * T0) = 0) & ((R2 + -1 * P0) = 0) & ((R1 + -1 * P2) = 0) & ((R0 + -1 * P30) = 0) & (((R7 + -1 * R7) = 0) & (((R3 + -1 * R3) = 0) & (((R6 + -1 * R6) = 0) & (((R5 + -1 * R5) = 0) & (((R1 + -1 * R1) = 0) & (((R9 + -1 * R9) = 0) & (((R0 + -1 * R0) = 0) & (((R4 + -1 * R4) = 0) & (((R7 + -1 * R7) = 0) & (((R3 + -1 * R3) = 0) & (((R6 + -1 * R6) = 0) & (((R5 + -1 * R5) = 0) & (((R1 + -1 * R1) = 0) & (((R9 + -1 * R9) = 0) & (((R0 + -1 * R0) = 0) & (((R4 + -1 * R4) = 0) & TRUE)))))))))))))))) & TRUE
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R2;
#end
#automata:
#states: 3
#init: 0
#final: 1,2,
#transitons: 
2;2;0;127;List(0)
1;2;0;127;List(0)
0;1;12;12;List(1)
#register: R7;
#end
#automata:
#states: 10
#init: 0
#final: 1,7,9,6,8,4,
#transitons: 
4;7;0;127;List(0, 1, 0, 1, 0)
0;2;0;127;List(0, 1, 1, 1, 0)
2;1;0;8;List(0, 1, 0, 1, 1)
0;5;32;32;List(0, 1, 0, 1, 1)
6;7;0;127;List(0, 1, 0, 1, 0)
8;9;1;65534;List(0, 0, 0, 0, 0)
1;8;1;65534;List(0, 1, 0, 0, 0)
7;9;2;65533;List(0, 0, 0, 0, 0)
0;1;0;8;List(0, 1, 0, 1, 1)
4;8;1;65534;List(0, 1, 0, 0, 0)
2;6;33;127;List(0, 1, 0, 1, 1)
6;9;2;65533;List(0, 0, 0, 0, 0)
0;3;9;13;List(0, 1, 0, 1, 1)
2;4;14;31;List(0, 1, 0, 1, 1)
8;8;0;127;List(0, 1, 0, 0, 0)
0;6;33;127;List(0, 1, 0, 1, 1)
0;0;0;127;List(1, 1, 0, 0, 0)
6;8;1;65534;List(0, 1, 0, 0, 0)
2;5;32;32;List(0, 1, 0, 1, 1)
9;9;0;127;List(0, 0, 0, 0, 0)
1;9;2;65533;List(0, 0, 0, 0, 0)
4;9;2;65533;List(0, 0, 0, 0, 0)
0;4;14;31;List(0, 1, 0, 1, 1)
7;7;0;127;List(0, 1, 0, 1, 0)
7;8;1;65534;List(0, 1, 0, 0, 0)
1;7;0;127;List(0, 1, 0, 1, 0)
2;3;9;13;List(0, 1, 0, 1, 1)
2;2;0;127;List(0, 1, 1, 1, 0)
#register: R17;R18;R15;R16;R4;
#end
#automata:
#states: 5
#init: 0
#final: 3,4,2,1,0,
#transitons: 
2;2;0;127;List(0, 1, 0, 1, 1)
1;2;0;127;List(0, 1, 0, 1, 1)
0;1;0;127;List(0, 1, 1, 1, 0)
1;1;0;127;List(0, 1, 1, 1, 0)
0;2;0;127;List(0, 1, 0, 1, 1)
4;4;0;127;List(0, 0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0)
3;4;1;65534;List(0, 0, 0, 0, 0)
1;4;1;65534;List(0, 0, 0, 0, 0)
2;3;1;65534;List(0, 1, 0, 0, 0)
3;3;0;127;List(0, 1, 0, 0, 0)
2;4;2;65533;List(0, 0, 0, 0, 0)
#register: R19;R20;R13;R14;R0;
#end
#automata:
#states: 6
#init: 0
#final: 3,4,5,
#transitons: 
0;2;0;127;List(0, 1, 1, 1, 0)
2;3;10;10;List(0, 1, 0, 1, 1)
2;1;0;127;List(0, 1, 0, 1, 0)
4;5;1;65534;List(0, 0, 0, 0, 0)
5;5;0;127;List(0, 0, 0, 0, 0)
0;3;10;10;List(0, 1, 0, 1, 1)
0;1;0;127;List(0, 1, 0, 1, 0)
1;1;0;127;List(0, 1, 0, 1, 0)
1;3;10;10;List(0, 1, 0, 1, 1)
3;4;0;127;List(0, 1, 0, 0, 0)
2;2;0;127;List(0, 1, 1, 1, 0)
0;0;0;127;List(1, 1, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
3;5;1;65534;List(0, 0, 0, 0, 0)
#register: R21;R22;R11;R12;R3;
#end
#automata:
#states: 8
#init: 0
#final: 7,6,1,5,3,
#transitons: 
5;7;1;65534;List(0, 0, 0)
0;1;0;8;List(0, 1, 1)
0;4;32;32;List(0, 1, 1)
0;5;33;127;List(0, 1, 1)
6;6;0;127;List(0, 1, 0)
1;6;0;127;List(0, 1, 0)
5;6;0;127;List(0, 1, 0)
3;7;1;65534;List(0, 0, 0)
6;7;1;65534;List(0, 0, 0)
0;2;9;13;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
3;6;0;127;List(0, 1, 0)
0;3;14;31;List(0, 1, 1)
7;7;0;127;List(0, 0, 0)
1;7;1;65534;List(0, 0, 0)
#register: R23;R24;R6;
#end
#automata:
#states: 4
#init: 0
#final: 0,1,2,3,
#transitons: 
0;2;1;63;List(0, 1, 0, 0)
0;1;91;127;List(0, 1, 1, 1)
1;2;65;90;List(0, 1, 0, 0)
3;3;0;127;List(0, 0, 0, 0)
0;1;0;64;List(0, 1, 1, 1)
1;1;91;127;List(0, 1, 1, 1)
0;2;65;90;List(0, 1, 0, 0)
1;3;93;65533;List(0, 0, 0, 0)
2;2;0;127;List(0, 1, 0, 0)
1;2;1;63;List(0, 1, 0, 0)
1;1;0;64;List(0, 1, 1, 1)
1;3;66;89;List(0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0)
1;3;2;62;List(0, 0, 0, 0)
1;2;92;65534;List(0, 1, 0, 0)
0;2;92;65534;List(0, 1, 0, 0)
2;3;1;65534;List(0, 0, 0, 0)
#register: R25;R26;R10;R9;
#end
#automata:
#states: 8
#init: 0
#final: 1,4,6,7,
#transitons: 
0;2;0;127;List(0, 1, 0)
4;7;0;127;List(0, 0, 0)
2;3;9;13;List(0, 1, 1)
2;5;32;32;List(0, 1, 1)
6;7;0;127;List(0, 0, 0)
1;7;0;127;List(0, 0, 0)
0;4;14;31;List(0, 1, 1)
7;7;0;127;List(0, 0, 0)
2;1;0;8;List(0, 1, 1)
0;3;9;13;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
0;6;33;127;List(0, 1, 1)
2;4;14;31;List(0, 1, 1)
2;2;0;127;List(0, 1, 0)
2;6;33;127;List(0, 1, 1)
0;1;0;8;List(0, 1, 1)
0;5;32;32;List(0, 1, 1)
#register: R27;R28;R5;
#end
#automata:
#states: 4
#init: 0
#final: 2,3,
#transitons: 
1;1;0;31;List(0, 1, 1)
0;1;33;127;List(0, 1, 1)
2;3;1;65534;List(0, 0, 0)
2;2;0;127;List(0, 1, 1)
1;2;32;32;List(0, 1, 1)
3;3;0;127;List(0, 0, 0)
1;1;33;127;List(0, 1, 1)
0;2;32;32;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
0;1;0;31;List(0, 1, 1)
#register: R29;R30;R1;
#end
#automata:
#states: 4
#init: 0
#final: 2,3,
#transitons: 
0;1;0;31;List(0, 1, 1)
2;2;0;127;List(0, 1, 0)
0;2;32;32;List(0, 1, 0)
2;3;1;65534;List(0, 0, 0)
0;1;33;127;List(0, 1, 1)
1;1;0;31;List(0, 1, 1)
1;2;32;32;List(0, 1, 0)
3;3;0;127;List(0, 0, 0)
1;1;33;127;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
#register: R31;R32;R8;
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;32;32;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;9;9;List()
#register: 
#end
$
