declare: Set(R4, P0, T1, P4, T0, R3, P2)
#intconstraints:
-1*P4 + P2 + -1 >= 0 & P4 + 1 >= 0 & P2 + -1 >= 0 & P0 + -10 >= 0 & ((P0 + -10) >= 0) & (((((R8 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R8) >= 0)) | (((R8 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R7 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & (((((R6 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R6) >= 0)) | (((R6 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R5 + -1 * 10) = 0)) & (((-1 >= 0) | ((P4 + 1) = 0)) | (-1 * P2 >= 0)) & ((((-1 * (P4 + 1) + -1) >= 0) | (((-1 * P4 + P2) + -1) = 0)) | (((P4 + 1) + -1 * P2) >= 0)) & ((R4 + -1 * T1) = 0) & ((R3 + -1 * T0) = 0) & ((P4 + -1 * R2) = 0) & (P4 >= 0) & ((R1 + -1 * P0) = 0) & ((R0 + -1 * P2) = 0) & (((R0 + -1 * R0) = 0) & (((R4 + -1 * R4) = 0) & (((R3 + -1 * R3) = 0) & (((R0 + -1 * R0) = 0) & (((R4 + -1 * R4) = 0) & (((R3 + -1 * R3) = 0) & TRUE)))))) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;32;32;List()
#register: 
#end
$
$
#automata:
#states: 11
#init: 0
#final: 10,
#transitons: 
10;10;0;127;List()
2;3;110;110;List()
9;10;47;47;List()
8;9;47;47;List()
1;2;111;111;List()
6;7;98;98;List()
4;5;111;111;List()
3;4;103;103;List()
0;1;109;109;List()
7;8;58;58;List()
5;6;100;100;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R1;
#end
#automata:
#states: 4
#init: 0
#final: 2,3,
#transitons: 
3;3;0;127;List(0, 0, 0)
0;2;43;43;List(0, 1, 0)
1;1;44;127;List(0, 1, 1)
2;3;1;65534;List(0, 0, 0)
1;2;43;43;List(0, 1, 0)
1;1;0;42;List(0, 1, 1)
0;1;44;127;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
0;1;0;42;List(0, 1, 1)
2;2;0;127;List(0, 1, 0)
#register: R5;R6;R2;
#end
#automata:
#states: 14
#init: 0
#final: 8,9,
#transitons: 
7;8;43;43;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
6;1;0;42;List(0, 1, 1)
2;10;46;46;List(0, 1, 1)
1;3;46;46;List(0, 1, 1)
6;1;108;127;List(0, 1, 1)
13;10;46;46;List(0, 1, 1)
5;3;46;46;List(0, 1, 1)
5;1;48;98;List(0, 1, 1)
4;1;48;110;List(0, 1, 1)
5;1;44;45;List(0, 1, 1)
12;2;0;45;List(0, 1, 1)
11;10;46;46;List(0, 1, 1)
4;3;46;46;List(0, 1, 1)
12;2;100;127;List(0, 1, 1)
10;11;115;115;List(0, 1, 1)
6;2;43;43;List(0, 1, 1)
12;2;48;98;List(0, 1, 1)
3;4;115;115;List(0, 1, 1)
8;9;47;47;List(0, 0, 0)
13;2;0;45;List(0, 1, 1)
11;2;48;110;List(0, 1, 1)
6;1;48;106;List(0, 1, 1)
10;2;0;45;List(0, 1, 1)
7;7;48;127;List(0, 1, 1)
10;2;48;114;List(0, 1, 1)
4;1;112;127;List(0, 1, 1)
6;3;46;46;List(0, 1, 1)
8;9;1;45;List(0, 0, 0)
4;1;44;45;List(0, 1, 1)
8;9;49;65534;List(0, 0, 0)
5;1;100;127;List(0, 1, 1)
4;2;43;43;List(0, 1, 1)
1;1;48;127;List(0, 1, 1)
8;8;48;127;List(0, 1, 1)
8;8;0;46;List(0, 1, 1)
5;2;43;43;List(0, 1, 1)
6;7;107;107;List(0, 1, 1)
7;7;0;42;List(0, 1, 1)
3;1;116;127;List(0, 1, 1)
13;2;48;106;List(0, 1, 1)
0;1;44;45;List(0, 1, 1)
5;6;99;99;List(0, 1, 1)
12;13;99;99;List(0, 1, 1)
3;1;0;42;List(0, 1, 1)
1;1;0;42;List(0, 1, 1)
0;1;48;127;List(0, 1, 1)
2;2;0;45;List(0, 1, 1)
5;1;0;42;List(0, 1, 1)
3;1;48;114;List(0, 1, 1)
7;7;44;46;List(0, 1, 1)
4;5;111;111;List(0, 1, 1)
3;1;44;45;List(0, 1, 1)
9;9;0;127;List(0, 0, 0)
1;1;44;45;List(0, 1, 1)
10;2;116;127;List(0, 1, 1)
0;3;46;46;List(0, 1, 1)
0;1;0;42;List(0, 1, 1)
12;10;46;46;List(0, 1, 1)
3;2;43;43;List(0, 1, 1)
0;2;43;43;List(0, 1, 1)
13;8;107;107;List(0, 1, 1)
1;2;43;43;List(0, 1, 1)
3;3;46;46;List(0, 1, 1)
11;12;111;111;List(0, 1, 1)
6;1;44;45;List(0, 1, 1)
2;2;48;127;List(0, 1, 1)
13;2;108;127;List(0, 1, 1)
11;2;0;45;List(0, 1, 1)
4;1;0;42;List(0, 1, 1)
10;10;46;46;List(0, 1, 1)
11;2;112;127;List(0, 1, 1)
#register: R7;R8;R0;
#end
$
