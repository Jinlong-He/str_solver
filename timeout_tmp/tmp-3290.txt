declare: Set(R531, P6, T8, P82, R10, R14, R17, T1, T5, P88, P0, T6, R1, P16, T2, P50, T3, P76, P83, P37, P12, R12, T0, P14, R18, R16, P1, R13, T4, R2, P4, R530, P77, P38, R19, R0, T7, R11, P2, R528)
#intconstraints:
P88 + -1*P76 != 0 & P83 != 0 & P82 + -1*P76 != 0 & P77 != 0 & P76 + -1*P50 != 0 & P76 + -1*P1 != 0 & P38 + -1*P37 != 0 & -1*P16 + P2 + -1 >= 0 & P16 + 1 >= 0 & -1*P14 + P12 + -1 >= 0 & P14 + 1 >= 0 & -1*P6 + P0 + -1 >= 0 & P6 + 1 >= 0 & -1*P4 + P2 + -1 >= 0 & P4 + 1 >= 0 & P2 + -1 >= 0 & P0 + -10 >= 0 & ((P6 + 1) >= 0) & (((((R654 + -1 * (P6 + 1)) = 0) & ((P0 + -1 * R654) >= 0)) | (((R654 + -1 * P0) = 0) & ((((P6 + 1) + -1 * T8) + -1) >= 0))) | ((((P6 + 1) = 0) | (P0 = 0)) & (T8 = 0))) & ((P6 + 1) >= 0) & (((((R653 + -1 * (P6 + 1)) = 0) & ((P0 + -1 * R653) >= 0)) | (((R653 + -1 * P0) = 0) & ((((P6 + 1) + -1 * T8) + -1) >= 0))) | ((((P6 + 1) = 0) | (P0 = 0)) & (T8 = 0))) & (((-1 * P6 + P0) + -1) >= 0) & ((((((R652 + -1 * ((P6 + 1) + ((-1 * P6 + P0) + -1))) = 0) & ((P0 + -1 * R652) >= 0)) | (((R652 + -1 * P0) = 0) & (((((P6 + 1) + ((-1 * P6 + P0) + -1)) + -1 * T7) + -1) >= 0))) & ((R651 + -1 * (P6 + 1)) = 0)) | (((((-1 * (P6 + 1) + -1) >= 0) | (((-1 * P6 + P0) + -1) = 0)) | (((P6 + 1) + -1 * P0) >= 0)) & (T7 = 0))) & (((-1 * P6 + P0) + -1) >= 0) & ((((((R650 + -1 * ((P6 + 1) + ((-1 * P6 + P0) + -1))) = 0) & ((P0 + -1 * R650) >= 0)) | (((R650 + -1 * P0) = 0) & (((((P6 + 1) + ((-1 * P6 + P0) + -1)) + -1 * T7) + -1) >= 0))) & ((R649 + -1 * (P6 + 1)) = 0)) | (((((-1 * (P6 + 1) + -1) >= 0) | (((-1 * P6 + P0) + -1) = 0)) | (((P6 + 1) + -1 * P0) >= 0)) & (T7 = 0))) & ((R10 + -1 * (R645 + R648)) = 0) & ((R531 + -1 * (R644 + R647)) = 0) & ((R530 + -1 * (R643 + R646)) = 0) & ((R2 + -1 * (R545 + R546)) = 0) & ((P0 + -10) >= 0) & (((((R544 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R544) >= 0)) | (((R544 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R543 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & (((((R542 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R542) >= 0)) | (((R542 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R541 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & ((((((R540 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R540) >= 0)) | (((R540 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R539 + -1 * 10) = 0)) | ((((-11 >= 0) | ((P0 + -10) = 0)) | ((10 + -1 * P0) >= 0)) & (P2 = 0))) & ((P0 + -10) >= 0) & (((((R538 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R538) >= 0)) | (((R538 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R537 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & (((((R536 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R536) >= 0)) | (((R536 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R535 + -1 * 10) = 0)) & ((P4 + 1) >= 0) & (((((R534 + -1 * (P4 + 1)) = 0) & ((P2 + -1 * R534) >= 0)) | (((R534 + -1 * P2) = 0) & ((((P4 + 1) + -1 * T6) + -1) >= 0))) | ((((P4 + 1) = 0) | (P2 = 0)) & (T6 = 0))) & (((-1 >= 0) | ((P16 + 1) = 0)) | (-1 * P2 >= 0)) & (((-1 >= 0) | ((P14 + 1) = 0)) | (-1 * P12 >= 0)) & (((-1 * P4 + P2) + -1) >= 0) & ((((((R533 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R533) >= 0)) | (((R533 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * T4) + -1) >= 0))) & ((R532 + -1 * (P4 + 1)) = 0)) | (((((-1 * (P4 + 1) + -1) >= 0) | (((-1 * P4 + P2) + -1) = 0)) | (((P4 + 1) + -1 * P2) >= 0)) & (T4 = 0))) & ((((-1 * (P16 + 1) + -1) >= 0) | (((-1 * P16 + P2) + -1) = 0)) | (((P16 + 1) + -1 * P2) >= 0)) & (((-1 * P14 + P12) + -1) >= 0) & ((((((R531 + -1 * ((P14 + 1) + ((-1 * P14 + P12) + -1))) = 0) & ((P12 + -1 * R531) >= 0)) | (((R531 + -1 * P12) = 0) & (((((P14 + 1) + ((-1 * P14 + P12) + -1)) + -1 * T1) + -1) >= 0))) & ((R530 + -1 * (P14 + 1)) = 0)) | (((((-1 * (P14 + 1) + -1) >= 0) | (((-1 * P14 + P12) + -1) = 0)) | (((P14 + 1) + -1 * P12) >= 0)) & (T1 = 0))) & ((R1 + -1 * (R528 + R529)) = 0) & ((R0 + -1 * (R18 + R19)) = 0) & ((R17 + -1 * T8) = 0) & ((R16 + -1 * T7) = 0) & ((R15 + -1 * T6) = 0) & ((R14 + -1 * T5) = 0) & ((R13 + -1 * T4) = 0) & ((R12 + -1 * T3) = 0) & ((R11 + -1 * T2) = 0) & ((R10 + -1 * T1) = 0) & ((P6 + -1 * -1) = 0) & ((P4 + -1 * R8) = 0) & (P4 >= 0) & ((P16 + -1 * -1) = 0) & (0 = 0) & ((P14 + -1 * -1) = 0) & ((R5 + -1 * T0) = 0) & ((R4 + -1 * P0) = 0) & ((R3 + -1 * P2) = 0) & ((R2 + -1 * P12) = 0) & ((R1 + -1 * P77) = 0) & ((R0 + -1 * P83) = 0) & (((R546 + -1 * R16) = 0) & (((R545 + -1 * R545) = 0) & (((R545 + -1 * R17) = 0) & (((R546 + -1 * R546) = 0) & (((R546 + -1 * R16) = 0) & (((R545 + -1 * R545) = 0) & (((R545 + -1 * R17) = 0) & (((R546 + -1 * R546) = 0) & TRUE)))))))) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;104;104;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;98;98;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;115;115;List()
#register: 
#end
$
$
#automata:
#states: 11
#init: 0
#final: 10,
#transitons: 
3;4;103;103;List()
4;5;111;111;List()
10;10;0;127;List()
7;8;58;58;List()
9;10;47;47;List()
6;7;98;98;List()
2;3;110;110;List()
5;6;100;100;List()
1;2;111;111;List()
0;1;109;109;List()
8;9;47;47;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R4;
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;70;127;List()
0;0;0;68;List()
#register: 
#end
#automata:
#states: 4
#init: 0
#final: 2,3,
#transitons: 
0;2;72;72;List(0, 1, 0)
0;1;73;127;List(0, 1, 1)
2;2;0;127;List(0, 1, 0)
0;1;0;71;List(0, 1, 1)
1;2;72;72;List(0, 1, 0)
0;0;0;127;List(1, 1, 0)
1;1;73;127;List(0, 1, 1)
1;1;0;71;List(0, 1, 1)
3;3;0;127;List(0, 0, 0)
2;3;1;65534;List(0, 0, 0)
#register: R535;R536;R8;
#end
#automata:
#states: 14
#init: 0
#final: 8,9,
#transitons: 
11;1;73;98;List(0, 1, 1)
5;3;38;42;List(0, 1, 1)
11;1;0;36;List(0, 1, 1)
8;9;37;37;List(0, 0, 0)
1;1;0;36;List(0, 1, 1)
5;3;112;127;List(0, 1, 1)
4;5;115;115;List(0, 1, 1)
6;3;38;42;List(0, 1, 1)
12;1;108;127;List(0, 1, 1)
2;3;72;72;List(0, 1, 1)
7;3;38;42;List(0, 1, 1)
4;3;48;57;List(0, 1, 1)
7;3;0;36;List(0, 1, 1)
0;1;45;45;List(0, 1, 1)
10;11;111;111;List(0, 1, 1)
3;3;0;36;List(0, 1, 1)
6;3;72;98;List(0, 1, 1)
7;3;72;106;List(0, 1, 1)
13;13;0;36;List(0, 1, 1)
12;3;72;72;List(0, 1, 1)
7;3;59;62;List(0, 1, 1)
12;1;38;42;List(0, 1, 1)
4;4;46;46;List(0, 1, 1)
1;3;72;72;List(0, 1, 1)
3;4;46;46;List(0, 1, 1)
2;1;73;114;List(0, 1, 1)
12;2;46;46;List(0, 1, 1)
8;9;39;41;List(0, 0, 0)
11;1;48;57;List(0, 1, 1)
4;3;72;114;List(0, 1, 1)
6;3;48;57;List(0, 1, 1)
8;9;63;71;List(0, 0, 0)
0;1;59;62;List(0, 1, 1)
13;13;59;62;List(0, 1, 1)
13;13;48;57;List(0, 1, 1)
5;3;0;36;List(0, 1, 1)
8;8;45;46;List(0, 1, 1)
2;2;46;46;List(0, 1, 1)
3;3;38;42;List(0, 1, 1)
8;8;48;57;List(0, 1, 1)
2;10;115;115;List(0, 1, 1)
8;9;73;65534;List(0, 0, 0)
12;1;45;45;List(0, 1, 1)
11;12;99;99;List(0, 1, 1)
2;1;59;62;List(0, 1, 1)
10;1;0;36;List(0, 1, 1)
8;9;49;56;List(0, 0, 0)
8;8;0;36;List(0, 1, 1)
8;9;58;58;List(0, 0, 0)
6;4;46;46;List(0, 1, 1)
8;8;38;42;List(0, 1, 1)
3;3;59;62;List(0, 1, 1)
1;1;45;45;List(0, 1, 1)
6;7;99;99;List(0, 1, 1)
7;4;46;46;List(0, 1, 1)
7;3;108;127;List(0, 1, 1)
11;3;72;72;List(0, 1, 1)
11;1;38;42;List(0, 1, 1)
5;3;48;57;List(0, 1, 1)
9;9;0;127;List(0, 0, 0)
8;9;47;47;List(0, 0, 0)
8;9;1;35;List(0, 0, 0)
0;2;46;46;List(0, 1, 1)
4;3;0;36;List(0, 1, 1)
10;3;72;72;List(0, 1, 1)
2;1;116;127;List(0, 1, 1)
6;3;0;36;List(0, 1, 1)
0;1;73;127;List(0, 1, 1)
11;1;100;127;List(0, 1, 1)
12;1;48;57;List(0, 1, 1)
3;3;45;45;List(0, 1, 1)
0;1;0;36;List(0, 1, 1)
10;1;59;62;List(0, 1, 1)
1;2;46;46;List(0, 1, 1)
3;3;72;127;List(0, 1, 1)
8;8;72;127;List(0, 1, 1)
2;1;0;36;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
13;13;45;46;List(0, 1, 1)
2;1;45;45;List(0, 1, 1)
4;3;45;45;List(0, 1, 1)
12;13;107;107;List(0, 1, 1)
1;1;38;42;List(0, 1, 1)
10;1;73;110;List(0, 1, 1)
4;3;59;62;List(0, 1, 1)
8;8;59;62;List(0, 1, 1)
11;1;59;62;List(0, 1, 1)
5;3;45;45;List(0, 1, 1)
7;8;107;107;List(0, 1, 1)
8;9;60;61;List(0, 0, 0)
10;1;48;57;List(0, 1, 1)
1;1;73;127;List(0, 1, 1)
6;3;59;62;List(0, 1, 1)
11;2;46;46;List(0, 1, 1)
7;3;45;45;List(0, 1, 1)
0;1;38;42;List(0, 1, 1)
10;1;45;45;List(0, 1, 1)
12;1;59;62;List(0, 1, 1)
13;8;72;72;List(0, 1, 1)
5;4;46;46;List(0, 1, 1)
13;13;73;127;List(0, 1, 1)
3;3;48;57;List(0, 1, 1)
12;1;73;106;List(0, 1, 1)
13;13;38;42;List(0, 1, 1)
2;1;48;57;List(0, 1, 1)
6;3;45;45;List(0, 1, 1)
6;3;100;127;List(0, 1, 1)
4;3;38;42;List(0, 1, 1)
11;1;45;45;List(0, 1, 1)
1;1;59;62;List(0, 1, 1)
7;3;48;57;List(0, 1, 1)
12;1;0;36;List(0, 1, 1)
5;3;59;62;List(0, 1, 1)
0;3;72;72;List(0, 1, 1)
0;1;48;57;List(0, 1, 1)
1;1;48;57;List(0, 1, 1)
2;1;38;42;List(0, 1, 1)
10;1;38;42;List(0, 1, 1)
4;3;116;127;List(0, 1, 1)
8;9;43;44;List(0, 0, 0)
10;2;46;46;List(0, 1, 1)
5;6;111;111;List(0, 1, 1)
5;3;72;110;List(0, 1, 1)
10;1;112;127;List(0, 1, 1)
#register: R537;R538;R3;
#end
#automata:
#states: 12
#init: 0
#final: 10,9,2,1,4,3,0,8,6,7,5,
#transitons: 
6;5;111;65533;List(0, 0, 0, 0, 0)
0;3;99;99;List(0, 1, 0, 1, 1)
9;4;117;65534;List(0, 1, 0, 0, 0)
7;5;73;89;List(0, 0, 0, 0, 0)
0;1;0;71;List(0, 1, 0, 1, 1)
6;4;92;106;List(0, 1, 0, 0, 0)
9;1;0;71;List(0, 1, 0, 1, 1)
2;2;0;127;List(0, 1, 1, 1, 0)
8;4;72;90;List(0, 1, 0, 0, 0)
9;4;92;113;List(0, 1, 0, 0, 0)
6;5;2;69;List(0, 0, 0, 0, 0)
2;5;72;90;List(0, 0, 0, 0, 0)
1;1;91;127;List(0, 1, 0, 1, 1)
1;4;72;90;List(0, 1, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0)
2;5;92;97;List(0, 0, 0, 0, 0)
7;4;72;90;List(0, 1, 0, 0, 0)
10;4;118;65534;List(0, 1, 0, 0, 0)
3;5;73;89;List(0, 0, 0, 0, 0)
8;1;112;127;List(0, 1, 0, 1, 1)
9;5;118;65533;List(0, 0, 0, 0, 0)
3;4;72;90;List(0, 1, 0, 0, 0)
10;5;2;69;List(0, 0, 0, 0, 0)
7;5;93;101;List(0, 0, 0, 0, 0)
3;1;91;96;List(0, 1, 0, 1, 1)
7;1;0;71;List(0, 1, 0, 1, 1)
10;4;1;70;List(0, 1, 0, 0, 0)
6;5;73;89;List(0, 0, 0, 0, 0)
1;4;1;70;List(0, 1, 0, 0, 0)
10;4;72;90;List(0, 1, 0, 0, 0)
10;5;93;113;List(0, 0, 0, 0, 0)
1;1;0;71;List(0, 1, 0, 1, 1)
3;6;97;97;List(0, 1, 0, 1, 1)
9;5;2;69;List(0, 0, 0, 0, 0)
9;10;115;115;List(0, 1, 0, 1, 1)
10;1;0;71;List(0, 1, 0, 1, 1)
10;11;116;116;List(0, 1, 0, 1, 1)
2;1;0;71;List(0, 1, 0, 1, 1)
7;4;1;70;List(0, 1, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
8;5;114;65533;List(0, 0, 0, 0, 0)
10;1;117;127;List(0, 1, 0, 1, 1)
6;4;72;90;List(0, 1, 0, 0, 0)
8;4;113;65534;List(0, 1, 0, 0, 0)
7;5;2;69;List(0, 0, 0, 0, 0)
8;1;91;110;List(0, 1, 0, 1, 1)
6;4;110;65534;List(0, 1, 0, 0, 0)
8;1;0;71;List(0, 1, 0, 1, 1)
7;5;107;65533;List(0, 0, 0, 0, 0)
6;1;0;71;List(0, 1, 0, 1, 1)
9;1;116;127;List(0, 1, 0, 1, 1)
3;5;100;65533;List(0, 0, 0, 0, 0)
1;5;73;89;List(0, 0, 0, 0, 0)
6;1;91;107;List(0, 1, 0, 1, 1)
1;5;93;65533;List(0, 0, 0, 0, 0)
7;4;92;102;List(0, 1, 0, 0, 0)
0;1;91;98;List(0, 1, 0, 1, 1)
7;1;91;103;List(0, 1, 0, 1, 1)
1;4;92;65534;List(0, 1, 0, 0, 0)
2;5;101;65534;List(0, 0, 0, 0, 0)
10;5;73;89;List(0, 0, 0, 0, 0)
9;4;72;90;List(0, 1, 0, 0, 0)
8;5;73;89;List(0, 0, 0, 0, 0)
3;4;1;70;List(0, 1, 0, 0, 0)
8;4;92;109;List(0, 1, 0, 0, 0)
3;4;92;95;List(0, 1, 0, 0, 0)
6;1;109;127;List(0, 1, 0, 1, 1)
2;1;91;98;List(0, 1, 0, 1, 1)
1;5;2;69;List(0, 0, 0, 0, 0)
10;1;91;115;List(0, 1, 0, 1, 1)
3;5;93;94;List(0, 0, 0, 0, 0)
9;1;91;114;List(0, 1, 0, 1, 1)
3;4;99;65534;List(0, 1, 0, 0, 0)
2;3;99;99;List(0, 1, 0, 1, 1)
7;1;105;127;List(0, 1, 0, 1, 1)
6;4;1;70;List(0, 1, 0, 0, 0)
11;1;91;127;List(0, 1, 0, 1, 1)
0;1;100;127;List(0, 1, 0, 1, 1)
8;5;93;108;List(0, 0, 0, 0, 0)
2;1;100;127;List(0, 1, 0, 1, 1)
4;5;1;65534;List(0, 0, 0, 0, 0)
6;7;108;108;List(0, 1, 0, 1, 1)
7;4;106;65534;List(0, 1, 0, 0, 0)
3;5;2;69;List(0, 0, 0, 0, 0)
2;5;1;70;List(0, 0, 0, 0, 0)
8;5;2;69;List(0, 0, 0, 0, 0)
10;5;119;65533;List(0, 0, 0, 0, 0)
9;5;73;89;List(0, 0, 0, 0, 0)
8;4;1;70;List(0, 1, 0, 0, 0)
5;5;0;127;List(0, 0, 0, 0, 0)
10;4;92;114;List(0, 1, 0, 0, 0)
8;9;111;111;List(0, 1, 0, 1, 1)
11;1;0;71;List(0, 1, 0, 1, 1)
0;2;0;127;List(0, 1, 1, 1, 0)
3;1;0;71;List(0, 1, 0, 1, 1)
6;5;93;105;List(0, 0, 0, 0, 0)
9;4;1;70;List(0, 1, 0, 0, 0)
9;5;93;112;List(0, 0, 0, 0, 0)
7;8;104;104;List(0, 1, 0, 1, 1)
3;1;98;127;List(0, 1, 0, 1, 1)
#register: R539;R540;R532;R533;R529;
#end
#automata:
#states: 6
#init: 0
#final: 1,3,4,5,
#transitons: 
4;4;0;127;List(0, 1, 0)
3;5;1;65534;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
0;3;92;127;List(0, 1, 1)
4;5;1;65534;List(0, 0, 0)
0;2;91;91;List(0, 1, 1)
1;5;1;65534;List(0, 0, 0)
0;1;0;90;List(0, 1, 1)
1;4;0;127;List(0, 1, 0)
5;5;0;127;List(0, 0, 0)
3;4;0;127;List(0, 1, 0)
#register: R541;R542;R5;
#end
#automata:
#states: 5
#init: 0
#final: 2,3,4,
#transitons: 
3;3;0;127;List(0, 1, 0, 0)
0;0;0;127;List(1, 1, 0, 0)
4;4;0;127;List(0, 0, 0, 0)
3;4;1;65534;List(0, 0, 0, 0)
2;3;0;127;List(0, 1, 0, 0)
2;4;1;65534;List(0, 0, 0, 0)
1;2;111;111;List(0, 1, 1, 1)
0;1;108;108;List(0, 1, 1, 1)
#register: R543;R544;R534;R15;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,2,
#transitons: 
1;2;83;83;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
0;1;0;82;List(0, 1, 1)
1;2;85;65534;List(0, 0, 0)
1;2;1;81;List(0, 0, 0)
2;2;0;127;List(0, 0, 0)
0;1;84;127;List(0, 1, 1)
1;1;84;127;List(0, 1, 1)
1;1;0;82;List(0, 1, 1)
#register: R649;R650;R546;
#end
#automata:
#states: 7
#init: 0
#final: 1,2,0,4,3,5,
#transitons: 
3;4;2;112;List(0, 0, 0, 0, 0)
4;4;0;127;List(0, 0, 0, 0, 0)
6;1;0;127;List(0, 1, 0, 1, 1)
2;2;0;127;List(0, 1, 0, 0, 0)
5;6;116;116;List(0, 1, 0, 1, 1)
0;2;113;65534;List(0, 1, 0, 0, 0)
3;2;117;65534;List(0, 1, 0, 0, 0)
0;2;1;109;List(0, 1, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0)
3;1;116;127;List(0, 1, 0, 1, 1)
5;1;117;127;List(0, 1, 0, 1, 1)
5;2;1;114;List(0, 1, 0, 0, 0)
1;2;1;65534;List(0, 1, 0, 0, 0)
1;1;0;127;List(0, 1, 0, 1, 1)
0;3;111;111;List(0, 1, 0, 1, 1)
1;4;2;65533;List(0, 0, 0, 0, 0)
3;2;1;113;List(0, 1, 0, 0, 0)
5;4;2;113;List(0, 0, 0, 0, 0)
2;4;1;65534;List(0, 0, 0, 0, 0)
3;1;0;114;List(0, 1, 0, 1, 1)
5;1;0;115;List(0, 1, 0, 1, 1)
3;4;118;65533;List(0, 0, 0, 0, 0)
5;2;118;65534;List(0, 1, 0, 0, 0)
5;4;119;65533;List(0, 0, 0, 0, 0)
3;5;115;115;List(0, 1, 0, 1, 1)
0;1;112;127;List(0, 1, 0, 1, 1)
0;1;0;110;List(0, 1, 0, 1, 1)
#register: R651;R652;R646;R647;R648;
#end
#automata:
#states: 2
#init: 0
#final: 0,1,
#transitons: 
0;0;84;127;List(1, 1)
0;1;83;83;List(0, 0)
0;1;85;65534;List(0, 0)
0;1;1;81;List(0, 0)
1;1;0;127;List(0, 0)
0;0;0;82;List(1, 1)
#register: R653;R545;
#end
#automata:
#states: 16
#init: 0
#final: 8,9,15,
#transitons: 
0;3;108;108;List(1, 0, 1, 1)
1;10;108;108;List(1, 0, 1, 1)
6;7;108;108;List(1, 0, 1, 1)
15;9;0;127;List(0, 0, 0, 0)
11;12;99;99;List(1, 0, 1, 1)
14;15;104;104;List(1, 0, 1, 1)
0;1;69;69;List(1, 1, 1, 0)
9;9;0;127;List(0, 0, 0, 0)
1;1;0;127;List(1, 1, 1, 0)
12;13;97;97;List(1, 0, 1, 1)
7;8;104;104;List(1, 0, 1, 1)
4;5;99;99;List(1, 0, 1, 1)
10;11;111;111;List(1, 0, 1, 1)
0;0;70;127;List(1, 1, 1, 0)
3;4;111;111;List(1, 0, 1, 1)
0;2;69;69;List(1, 1, 1, 0)
5;6;97;97;List(1, 0, 1, 1)
8;9;0;127;List(0, 0, 0, 0)
0;0;0;68;List(1, 1, 1, 0)
13;14;108;108;List(1, 0, 1, 1)
#register: R654;R643;R644;R645;
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;101;101;List()
#register: 
#end
$
