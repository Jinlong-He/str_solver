declare: Set(T2, T6, P34, T1, R11, R788, T3, P0, R789, R9, P10, T5, R790, P12, R8, P73, P14, P54, P74, R13, P33, P4, T4, R795, R794, R1, R0, R791, R5, R10, P2, T0)
#intconstraints:
P74 != 0 & P73 + -1*P54 != 0 & P34 + -1*P33 != 0 & -1*P14 + P0 + -1 >= 0 & P14 + 1 >= 0 & -1*P12 + P10 + -1 >= 0 & P12 + 1 >= 0 & -1*P4 + P2 + -1 >= 0 & P4 + 1 >= 0 & P2 + -1 >= 0 & P0 + -10 >= 0 & ((P0 + -10) >= 0) & (((((R868 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R868) >= 0)) | (((R868 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R867 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & ((((((R866 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R866) >= 0)) | (((R866 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R865 + -1 * 10) = 0)) | ((((-11 >= 0) | ((P0 + -10) = 0)) | ((10 + -1 * P0) >= 0)) & (P2 = 0))) & ((P0 + -10) >= 0) & (((((R864 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R864) >= 0)) | (((R864 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R863 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & (((((R862 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R862) >= 0)) | (((R862 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R861 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & ((((((R860 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R860) >= 0)) | (((R860 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R859 + -1 * 10) = 0)) | ((((-11 >= 0) | ((P0 + -10) = 0)) | ((10 + -1 * P0) >= 0)) & (P2 = 0))) & ((P0 + -10) >= 0) & ((((((R858 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R858) >= 0)) | (((R858 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R857 + -1 * 10) = 0)) | ((((-11 >= 0) | ((P0 + -10) = 0)) | ((10 + -1 * P0) >= 0)) & (P2 = 0))) & ((P0 + -10) >= 0) & ((((((R856 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R856) >= 0)) | (((R856 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R855 + -1 * 10) = 0)) | ((((-11 >= 0) | ((P0 + -10) = 0)) | ((10 + -1 * P0) >= 0)) & (P2 = 0))) & ((P0 + -10) >= 0) & (((((R854 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R854) >= 0)) | (((R854 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R853 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & (((((R852 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R852) >= 0)) | (((R852 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R851 + -1 * 10) = 0)) & ((P0 + -10) >= 0) & (((((R850 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R850) >= 0)) | (((R850 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P2) + -1) >= 0))) & ((R849 + -1 * 10) = 0)) & ((P4 + 1) >= 0) & (((((R848 + -1 * (P4 + 1)) = 0) & ((P2 + -1 * R848) >= 0)) | (((R848 + -1 * P2) = 0) & ((((P4 + 1) + -1 * T4) + -1) >= 0))) | ((((P4 + 1) = 0) | (P2 = 0)) & (T4 = 0))) & ((P4 + 1) >= 0) & (((((R847 + -1 * (P4 + 1)) = 0) & ((P2 + -1 * R847) >= 0)) | (((R847 + -1 * P2) = 0) & ((((P4 + 1) + -1 * T4) + -1) >= 0))) | ((((P4 + 1) = 0) | (P2 = 0)) & (T4 = 0))) & ((P4 + 1) >= 0) & (((((R846 + -1 * (P4 + 1)) = 0) & ((P2 + -1 * R846) >= 0)) | (((R846 + -1 * P2) = 0) & ((((P4 + 1) + -1 * T4) + -1) >= 0))) | ((((P4 + 1) = 0) | (P2 = 0)) & (T4 = 0))) & (((-1 * P4 + P2) + -1) >= 0) & (((((R845 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R845) >= 0)) | (((R845 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * T3) + -1) >= 0))) & ((R844 + -1 * (P4 + 1)) = 0)) & (((-1 * P4 + P2) + -1) >= 0) & (((((R843 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R843) >= 0)) | (((R843 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * T3) + -1) >= 0))) & ((R842 + -1 * (P4 + 1)) = 0)) & (((-1 * P4 + P2) + -1) >= 0) & ((((((R841 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R841) >= 0)) | (((R841 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * T3) + -1) >= 0))) & ((R840 + -1 * (P4 + 1)) = 0)) | (((((-1 * (P4 + 1) + -1) >= 0) | (((-1 * P4 + P2) + -1) = 0)) | (((P4 + 1) + -1 * P2) >= 0)) & (T3 = 0))) & (((-1 * P4 + P2) + -1) >= 0) & ((((((R839 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R839) >= 0)) | (((R839 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * T3) + -1) >= 0))) & ((R838 + -1 * (P4 + 1)) = 0)) | (((((-1 * (P4 + 1) + -1) >= 0) | (((-1 * P4 + P2) + -1) = 0)) | (((P4 + 1) + -1 * P2) >= 0)) & (T3 = 0))) & ((R788 + -1 * (R835 + R837)) = 0) & ((R794 + -1 * (R834 + R836)) = 0) & ((R8 + -1 * (R801 + R804)) = 0) & ((R791 + -1 * (R800 + R803)) = 0) & ((R790 + -1 * (R799 + R802)) = 0) & ((R1 + -1 * (R797 + R798)) = 0) & ((R5 + -1 * (R795 + R796)) = 0) & (((-1 >= 0) | ((P14 + 1) = 0)) | (-1 * P0 >= 0)) & ((P12 + 1) >= 0) & (((((R794 + -1 * (P12 + 1)) = 0) & ((P10 + -1 * R794) >= 0)) | (((R794 + -1 * P10) = 0) & ((((P12 + 1) + -1 * T2) + -1) >= 0))) | ((((P12 + 1) = 0) | (P10 = 0)) & (T2 = 0))) & (((-1 * P14 + P0) + -1) >= 0) & (((((R793 + -1 * ((P14 + 1) + ((-1 * P14 + P0) + -1))) = 0) & ((P0 + -1 * R793) >= 0)) | (((R793 + -1 * P0) = 0) & (((((P14 + 1) + ((-1 * P14 + P0) + -1)) + -1 * T5) + -1) >= 0))) & ((R792 + -1 * (P14 + 1)) = 0)) & (((-1 * P12 + P10) + -1) >= 0) & ((((((R791 + -1 * ((P12 + 1) + ((-1 * P12 + P10) + -1))) = 0) & ((P10 + -1 * R791) >= 0)) | (((R791 + -1 * P10) = 0) & (((((P12 + 1) + ((-1 * P12 + P10) + -1)) + -1 * T1) + -1) >= 0))) & ((R790 + -1 * (P12 + 1)) = 0)) | (((((-1 * (P12 + 1) + -1) >= 0) | (((-1 * P12 + P10) + -1) = 0)) | (((P12 + 1) + -1 * P10) >= 0)) & (T1 = 0))) & ((R0 + -1 * (R788 + R789)) = 0) & ((R13 + -1 * T6) = 0) & ((R12 + -1 * T5) = 0) & ((R11 + -1 * T4) = 0) & ((R10 + -1 * T3) = 0) & ((R9 + -1 * T2) = 0) & ((R8 + -1 * T1) = 0) & ((P14 + -1 * -1) = 0) & ((P4 + -1 * R6) = 0) & (P4 >= 0) & (0 = 0) & ((P12 + -1 * R5) = 0) & (P12 >= 0) & ((R4 + -1 * T0) = 0) & ((R3 + -1 * P0) = 0) & ((R2 + -1 * P2) = 0) & ((R1 + -1 * P10) = 0) & ((R0 + -1 * P74) = 0) & (((R797 + -1 * R795) = 0) & (((R798 + -1 * R798) = 0) & (((R798 + -1 * R10) = 0) & (((R2 + -1 * R2) = 0) & (((R797 + -1 * R797) = 0) & (((R797 + -1 * R11) = 0) & (((R797 + -1 * R795) = 0) & (((R798 + -1 * R798) = 0) & (((R798 + -1 * R10) = 0) & (((R2 + -1 * R2) = 0) & (((R797 + -1 * R797) = 0) & (((R797 + -1 * R11) = 0) & TRUE)))))))))))) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;97;97;List()
#register: 
#end
$
$
#automata:
#states: 11
#init: 0
#final: 10,
#transitons: 
3;4;103;103;List()
5;6;100;100;List()
2;3;110;110;List()
7;8;58;58;List()
1;2;111;111;List()
0;1;109;109;List()
8;9;47;47;List()
6;7;98;98;List()
9;10;47;47;List()
4;5;111;111;List()
10;10;0;127;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R3;
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;67;127;List()
0;0;0;65;List()
#register: 
#end
#automata:
#states: 11
#init: 0
#final: 9,10,
#transitons: 
0;1;108;108;List(0, 1, 1)
4;5;108;108;List(0, 1, 1)
3;4;97;97;List(0, 1, 1)
6;7;111;111;List(0, 1, 1)
9;10;0;127;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
7;8;115;115;List(0, 1, 1)
8;9;116;116;List(0, 1, 1)
5;6;104;104;List(0, 1, 1)
10;10;0;127;List(0, 0, 0)
2;3;99;99;List(0, 1, 1)
1;2;111;111;List(0, 1, 1)
#register: R792;R793;R12;
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List()
#register: 
#end
#automata:
#states: 22
#init: 0
#final: 2,21,3,1,20,
#transitons: 
17;3;91;114;List(0, 1, 1, 1, 1)
9;1;91;107;List(0, 1, 1, 1, 1)
12;1;116;127;List(0, 1, 1, 1, 1)
6;8;65;65;List(0, 1, 1, 1, 1)
16;3;91;110;List(0, 1, 1, 1, 1)
4;1;112;127;List(0, 1, 1, 1, 1)
12;1;91;114;List(0, 1, 1, 1, 1)
18;3;91;115;List(0, 1, 1, 1, 1)
4;3;65;65;List(0, 1, 1, 1, 1)
0;1;109;127;List(0, 1, 1, 1, 1)
17;3;116;127;List(0, 1, 1, 1, 1)
10;1;0;64;List(0, 1, 1, 1, 1)
0;3;65;65;List(0, 1, 1, 1, 1)
3;20;92;65534;List(0, 1, 0, 0, 0)
2;21;1;65534;List(0, 0, 0, 0, 0)
4;5;111;111;List(0, 1, 1, 1, 1)
4;2;65;65;List(0, 1, 1, 1, 1)
0;0;0;127;List(1, 1, 0, 0, 0)
1;1;66;80;List(0, 1, 1, 1, 1)
4;1;0;64;List(0, 1, 1, 1, 1)
1;1;0;64;List(0, 1, 1, 1, 1)
5;1;91;98;List(0, 1, 1, 1, 1)
11;1;66;80;List(0, 1, 1, 1, 1)
20;20;0;127;List(0, 1, 0, 0, 0)
11;3;65;65;List(0, 1, 1, 1, 1)
18;3;0;80;List(0, 1, 1, 1, 1)
8;15;108;108;List(0, 1, 1, 1, 1)
15;3;0;80;List(0, 1, 1, 1, 1)
8;3;91;107;List(0, 1, 1, 1, 1)
5;1;66;80;List(0, 1, 1, 1, 1)
14;2;65;65;List(0, 1, 1, 1, 1)
10;1;91;103;List(0, 1, 1, 1, 1)
8;3;109;127;List(0, 1, 1, 1, 1)
12;3;65;65;List(0, 1, 1, 1, 1)
6;1;91;96;List(0, 1, 1, 1, 1)
20;21;1;65534;List(0, 0, 0, 0, 0)
4;1;66;80;List(0, 1, 1, 1, 1)
9;1;109;127;List(0, 1, 1, 1, 1)
18;19;116;116;List(0, 1, 1, 1, 1)
6;7;65;65;List(0, 1, 1, 1, 1)
21;21;0;127;List(0, 0, 0, 0, 0)
15;16;104;104;List(0, 1, 1, 1, 1)
8;3;0;80;List(0, 1, 1, 1, 1)
0;2;65;65;List(0, 1, 1, 1, 1)
15;3;91;103;List(0, 1, 1, 1, 1)
4;1;91;110;List(0, 1, 1, 1, 1)
3;20;1;79;List(0, 1, 0, 0, 0)
5;1;100;127;List(0, 1, 1, 1, 1)
2;20;0;127;List(0, 1, 0, 0, 0)
1;20;1;63;List(0, 1, 0, 0, 0)
1;21;82;89;List(0, 0, 0, 0, 0)
9;2;65;65;List(0, 1, 1, 1, 1)
17;18;115;115;List(0, 1, 1, 1, 1)
13;1;0;64;List(0, 1, 1, 1, 1)
13;2;65;65;List(0, 1, 1, 1, 1)
17;3;0;80;List(0, 1, 1, 1, 1)
3;3;0;80;List(0, 1, 1, 1, 1)
1;2;65;65;List(0, 1, 1, 1, 1)
14;1;66;80;List(0, 1, 1, 1, 1)
3;21;2;78;List(0, 0, 0, 0, 0)
11;1;0;64;List(0, 1, 1, 1, 1)
6;9;97;97;List(0, 1, 1, 1, 1)
16;3;0;80;List(0, 1, 1, 1, 1)
1;1;91;127;List(0, 1, 1, 1, 1)
3;3;91;127;List(0, 1, 1, 1, 1)
10;11;104;104;List(0, 1, 1, 1, 1)
1;21;68;78;List(0, 0, 0, 0, 0)
1;3;65;65;List(0, 1, 1, 1, 1)
12;1;66;80;List(0, 1, 1, 1, 1)
1;21;2;62;List(0, 0, 0, 0, 0)
3;21;93;65533;List(0, 0, 0, 0, 0)
0;1;0;64;List(0, 1, 1, 1, 1)
11;1;112;127;List(0, 1, 1, 1, 1)
13;14;116;116;List(0, 1, 1, 1, 1)
0;1;91;107;List(0, 1, 1, 1, 1)
10;3;65;65;List(0, 1, 1, 1, 1)
14;1;91;127;List(0, 1, 1, 1, 1)
5;3;65;65;List(0, 1, 1, 1, 1)
9;1;66;80;List(0, 1, 1, 1, 1)
3;20;81;90;List(0, 1, 0, 0, 0)
13;1;117;127;List(0, 1, 1, 1, 1)
19;3;91;127;List(0, 1, 1, 1, 1)
12;13;115;115;List(0, 1, 1, 1, 1)
16;3;112;127;List(0, 1, 1, 1, 1)
5;6;99;99;List(0, 1, 1, 1, 1)
11;2;65;65;List(0, 1, 1, 1, 1)
13;1;91;115;List(0, 1, 1, 1, 1)
5;1;0;64;List(0, 1, 1, 1, 1)
0;1;66;80;List(0, 1, 1, 1, 1)
11;12;111;111;List(0, 1, 1, 1, 1)
1;20;67;79;List(0, 1, 0, 0, 0)
9;3;65;65;List(0, 1, 1, 1, 1)
5;2;65;65;List(0, 1, 1, 1, 1)
16;17;111;111;List(0, 1, 1, 1, 1)
14;1;0;64;List(0, 1, 1, 1, 1)
10;1;66;80;List(0, 1, 1, 1, 1)
1;21;93;65533;List(0, 0, 0, 0, 0)
10;2;65;65;List(0, 1, 1, 1, 1)
11;1;91;110;List(0, 1, 1, 1, 1)
3;21;82;89;List(0, 0, 0, 0, 0)
13;1;66;80;List(0, 1, 1, 1, 1)
15;3;105;127;List(0, 1, 1, 1, 1)
6;1;98;127;List(0, 1, 1, 1, 1)
18;3;117;127;List(0, 1, 1, 1, 1)
0;4;108;108;List(0, 1, 1, 1, 1)
10;1;105;127;List(0, 1, 1, 1, 1)
1;20;81;90;List(0, 1, 0, 0, 0)
9;1;0;64;List(0, 1, 1, 1, 1)
14;3;65;65;List(0, 1, 1, 1, 1)
9;10;108;108;List(0, 1, 1, 1, 1)
19;3;0;80;List(0, 1, 1, 1, 1)
12;1;0;64;List(0, 1, 1, 1, 1)
13;3;65;65;List(0, 1, 1, 1, 1)
6;1;0;64;List(0, 1, 1, 1, 1)
1;20;92;65534;List(0, 1, 0, 0, 0)
12;2;65;65;List(0, 1, 1, 1, 1)
6;1;66;80;List(0, 1, 1, 1, 1)
#register: R849;R850;R846;R834;R835;
#end
#automata:
#states: 6
#init: 0
#final: 1,3,4,5,
#transitons: 
0;0;0;127;List(1, 1, 0)
5;5;0;127;List(0, 0, 0)
1;4;0;127;List(0, 1, 0)
3;5;1;65534;List(0, 0, 0)
4;4;0;127;List(0, 1, 0)
0;1;0;90;List(0, 1, 1)
0;3;92;127;List(0, 1, 1)
0;2;91;91;List(0, 1, 1)
4;5;1;65534;List(0, 0, 0)
1;5;1;65534;List(0, 0, 0)
3;4;0;127;List(0, 1, 0)
#register: R851;R852;R4;
#end
#automata:
#states: 12
#init: 0
#final: 4,6,3,8,7,5,
#transitons: 
3;4;44;44;List(0, 0, 0)
5;4;58;58;List(0, 0, 0)
6;3;65;110;List(0, 1, 1)
6;3;48;57;List(0, 1, 1)
11;1;66;106;List(0, 1, 1)
11;2;46;46;List(0, 1, 1)
0;1;48;57;List(0, 1, 1)
11;1;0;43;List(0, 1, 1)
11;1;45;45;List(0, 1, 1)
10;1;59;62;List(0, 1, 1)
8;3;65;106;List(0, 1, 1)
7;4;44;44;List(0, 0, 0)
9;1;45;45;List(0, 1, 1)
3;3;45;45;List(0, 1, 1)
2;1;66;114;List(0, 1, 1)
6;3;45;45;List(0, 1, 1)
5;4;44;44;List(0, 0, 0)
5;3;48;57;List(0, 1, 1)
1;1;0;43;List(0, 1, 1)
1;1;66;127;List(0, 1, 1)
2;3;65;65;List(0, 1, 1)
8;3;0;43;List(0, 1, 1)
9;10;111;111;List(0, 1, 1)
10;1;45;45;List(0, 1, 1)
10;1;0;43;List(0, 1, 1)
5;5;46;46;List(0, 1, 1)
8;4;47;47;List(0, 0, 0)
8;3;48;57;List(0, 1, 1)
8;3;108;127;List(0, 1, 1)
7;4;66;97;List(0, 0, 0)
6;3;59;62;List(0, 1, 1)
7;3;45;45;List(0, 1, 1)
10;3;65;65;List(0, 1, 1)
6;4;66;109;List(0, 0, 0)
9;1;66;110;List(0, 1, 1)
7;4;60;61;List(0, 0, 0)
1;1;48;57;List(0, 1, 1)
7;4;49;56;List(0, 0, 0)
5;4;60;61;List(0, 0, 0)
9;1;59;62;List(0, 1, 1)
3;4;63;64;List(0, 0, 0)
8;4;60;61;List(0, 0, 0)
3;3;0;43;List(0, 1, 1)
3;4;47;47;List(0, 0, 0)
7;4;63;64;List(0, 0, 0)
3;3;59;62;List(0, 1, 1)
2;2;46;46;List(0, 1, 1)
5;6;115;115;List(0, 1, 1)
5;3;59;62;List(0, 1, 1)
7;3;59;62;List(0, 1, 1)
0;1;0;43;List(0, 1, 1)
9;1;48;57;List(0, 1, 1)
0;1;66;127;List(0, 1, 1)
5;3;65;114;List(0, 1, 1)
7;3;48;57;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
4;4;0;127;List(0, 0, 0)
5;3;116;127;List(0, 1, 1)
1;1;45;45;List(0, 1, 1)
5;4;63;64;List(0, 0, 0)
6;4;49;56;List(0, 0, 0)
6;3;112;127;List(0, 1, 1)
6;3;0;43;List(0, 1, 1)
1;3;65;65;List(0, 1, 1)
3;4;60;61;List(0, 0, 0)
7;4;58;58;List(0, 0, 0)
9;2;46;46;List(0, 1, 1)
6;4;44;44;List(0, 0, 0)
8;4;1;42;List(0, 0, 0)
2;1;59;62;List(0, 1, 1)
0;1;45;45;List(0, 1, 1)
5;3;0;43;List(0, 1, 1)
8;4;44;44;List(0, 0, 0)
11;1;59;62;List(0, 1, 1)
3;3;48;57;List(0, 1, 1)
2;9;115;115;List(0, 1, 1)
9;3;65;65;List(0, 1, 1)
0;1;59;62;List(0, 1, 1)
8;3;59;62;List(0, 1, 1)
8;5;46;46;List(0, 1, 1)
8;4;66;105;List(0, 0, 0)
5;3;45;45;List(0, 1, 1)
7;3;100;127;List(0, 1, 1)
7;4;1;42;List(0, 0, 0)
8;4;49;56;List(0, 0, 0)
6;7;111;111;List(0, 1, 1)
9;1;0;43;List(0, 1, 1)
0;3;65;65;List(0, 1, 1)
5;4;1;42;List(0, 0, 0)
6;4;58;58;List(0, 0, 0)
6;4;63;64;List(0, 0, 0)
1;1;59;62;List(0, 1, 1)
7;4;101;65534;List(0, 0, 0)
2;1;0;43;List(0, 1, 1)
6;4;1;42;List(0, 0, 0)
3;3;65;127;List(0, 1, 1)
3;4;49;56;List(0, 0, 0)
6;4;113;65534;List(0, 0, 0)
7;4;47;47;List(0, 0, 0)
8;3;45;45;List(0, 1, 1)
10;1;100;127;List(0, 1, 1)
7;5;46;46;List(0, 1, 1)
3;5;46;46;List(0, 1, 1)
10;11;99;99;List(0, 1, 1)
10;2;46;46;List(0, 1, 1)
8;4;58;58;List(0, 0, 0)
3;4;66;65534;List(0, 0, 0)
11;1;48;57;List(0, 1, 1)
5;4;49;56;List(0, 0, 0)
2;1;116;127;List(0, 1, 1)
0;2;46;46;List(0, 1, 1)
5;4;66;113;List(0, 0, 0)
3;4;1;42;List(0, 0, 0)
5;4;117;65534;List(0, 0, 0)
5;4;47;47;List(0, 0, 0)
8;4;63;64;List(0, 0, 0)
10;1;48;57;List(0, 1, 1)
6;4;60;61;List(0, 0, 0)
8;4;109;65534;List(0, 0, 0)
6;4;47;47;List(0, 0, 0)
11;3;65;65;List(0, 1, 1)
11;1;108;127;List(0, 1, 1)
1;2;46;46;List(0, 1, 1)
10;1;66;98;List(0, 1, 1)
7;3;65;98;List(0, 1, 1)
6;5;46;46;List(0, 1, 1)
9;1;112;127;List(0, 1, 1)
2;1;45;45;List(0, 1, 1)
7;8;99;99;List(0, 1, 1)
8;4;107;107;List(0, 0, 0)
3;4;58;58;List(0, 0, 0)
2;1;48;57;List(0, 1, 1)
7;3;0;43;List(0, 1, 1)
#register: R853;R854;R2;
#end
#automata:
#states: 6
#init: 0
#final: 0,3,1,2,5,4,
#transitons: 
0;2;0;127;List(0, 1, 1, 1, 0, 0)
1;5;83;88;List(0, 0, 0, 0, 0, 0)
1;3;81;90;List(0, 1, 0, 1, 0, 0)
1;4;2;78;List(0, 1, 0, 0, 0, 0)
1;5;94;65532;List(0, 0, 0, 0, 0, 0)
2;5;82;89;List(0, 0, 0, 0, 0, 0)
2;3;81;90;List(0, 1, 0, 1, 0, 0)
5;5;0;127;List(0, 0, 0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0, 0)
3;4;1;65534;List(0, 1, 0, 0, 0, 0)
0;3;81;90;List(0, 1, 0, 1, 0, 0)
1;4;93;65533;List(0, 1, 0, 0, 0, 0)
3;5;2;65533;List(0, 0, 0, 0, 0, 0)
0;1;91;127;List(0, 1, 0, 1, 1, 1)
2;2;0;127;List(0, 1, 1, 1, 0, 0)
0;1;0;80;List(0, 1, 0, 1, 1, 1)
2;3;92;65534;List(0, 1, 0, 1, 0, 0)
0;3;92;65534;List(0, 1, 0, 1, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0, 0)
1;4;82;89;List(0, 1, 0, 0, 0, 0)
2;1;0;80;List(0, 1, 0, 1, 1, 1)
4;5;1;65534;List(0, 0, 0, 0, 0, 0)
2;3;1;79;List(0, 1, 0, 1, 0, 0)
2;1;91;127;List(0, 1, 0, 1, 1, 1)
3;3;0;127;List(0, 1, 0, 1, 0, 0)
2;5;93;65533;List(0, 0, 0, 0, 0, 0)
0;3;1;79;List(0, 1, 0, 1, 0, 0)
1;5;3;77;List(0, 0, 0, 0, 0, 0)
1;3;1;79;List(0, 1, 0, 1, 0, 0)
1;1;0;80;List(0, 1, 0, 1, 1, 1)
1;1;91;127;List(0, 1, 0, 1, 1, 1)
1;3;92;65534;List(0, 1, 0, 1, 0, 0)
2;5;2;78;List(0, 0, 0, 0, 0, 0)
#register: R855;R856;R838;R839;R836;R837;
#end
#automata:
#states: 4
#init: 0
#final: 0,1,2,3,
#transitons: 
0;0;0;127;List(1, 1, 0, 0)
1;2;66;80;List(0, 1, 0, 0)
1;3;67;79;List(0, 0, 0, 0)
1;2;1;64;List(0, 1, 0, 0)
1;1;0;65;List(0, 1, 1, 1)
2;3;1;65534;List(0, 0, 0, 0)
3;3;0;127;List(0, 0, 0, 0)
2;2;0;127;List(0, 1, 0, 0)
0;2;82;65534;List(0, 1, 0, 0)
1;3;83;65533;List(0, 0, 0, 0)
0;1;81;127;List(0, 1, 1, 1)
0;1;0;65;List(0, 1, 1, 1)
0;2;66;80;List(0, 1, 0, 0)
1;2;82;65534;List(0, 1, 0, 0)
1;1;81;127;List(0, 1, 1, 1)
0;2;1;64;List(0, 1, 0, 0)
1;3;2;63;List(0, 0, 0, 0)
#register: R857;R858;R848;R797;
#end
#automata:
#states: 6
#init: 0
#final: 3,5,4,0,1,2,
#transitons: 
5;5;0;127;List(0, 0, 0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0, 0)
3;2;1;65534;List(0, 1, 0, 0, 0, 0)
0;2;67;65534;List(0, 1, 0, 0, 0, 0)
0;1;66;127;List(0, 1, 1, 1, 1, 0)
0;2;1;63;List(0, 1, 0, 0, 0, 0)
1;5;68;65533;List(0, 0, 0, 0, 0, 0)
1;3;65;65;List(0, 1, 1, 1, 1, 0)
3;3;0;127;List(0, 1, 1, 1, 1, 0)
0;3;65;65;List(0, 1, 1, 1, 1, 0)
0;4;65;65;List(0, 1, 1, 1, 1, 0)
1;4;65;65;List(0, 1, 1, 1, 1, 0)
2;5;1;65534;List(0, 0, 0, 0, 0, 0)
1;2;67;65534;List(0, 1, 0, 0, 0, 0)
1;1;0;64;List(0, 1, 1, 1, 1, 0)
1;5;2;62;List(0, 0, 0, 0, 0, 0)
0;1;0;64;List(0, 1, 1, 1, 1, 0)
2;2;0;127;List(0, 1, 0, 0, 0, 0)
4;5;1;65534;List(0, 0, 0, 0, 0, 0)
4;2;0;127;List(0, 1, 0, 0, 0, 0)
1;1;66;127;List(0, 1, 1, 1, 1, 0)
3;5;2;65533;List(0, 0, 0, 0, 0, 0)
1;2;1;63;List(0, 1, 0, 0, 0, 0)
#register: R859;R860;R847;R799;R800;R801;
#end
#automata:
#states: 6
#init: 0
#final: 3,4,5,
#transitons: 
3;3;0;64;List(0, 1, 0, 1, 1)
3;5;82;65533;List(0, 0, 0, 0, 0)
0;1;0;64;List(0, 1, 0, 1, 1)
2;2;0;127;List(0, 1, 1, 1, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
0;3;80;80;List(0, 1, 0, 1, 1)
2;3;80;80;List(0, 1, 0, 1, 1)
2;1;81;127;List(0, 1, 0, 1, 1)
0;2;0;127;List(0, 1, 1, 1, 0)
3;4;65;79;List(0, 1, 0, 0, 0)
3;5;2;62;List(0, 0, 0, 0, 0)
2;1;0;64;List(0, 1, 0, 1, 1)
3;4;1;63;List(0, 1, 0, 0, 0)
3;4;81;65534;List(0, 1, 0, 0, 0)
1;1;0;64;List(0, 1, 0, 1, 1)
3;5;66;78;List(0, 0, 0, 0, 0)
1;3;80;80;List(0, 1, 0, 1, 1)
3;3;80;127;List(0, 1, 0, 1, 1)
0;0;0;127;List(1, 1, 0, 0, 0)
1;1;81;127;List(0, 1, 0, 1, 1)
5;5;0;127;List(0, 0, 0, 0, 0)
4;5;1;65534;List(0, 0, 0, 0, 0)
0;1;81;127;List(0, 1, 0, 1, 1)
#register: R861;R862;R842;R843;R798;
#end
#automata:
#states: 4
#init: 0
#final: 2,3,
#transitons: 
3;3;0;127;List(0, 0, 0)
0;1;66;127;List(0, 1, 1)
2;2;0;127;List(0, 1, 0)
1;1;66;127;List(0, 1, 1)
1;1;0;64;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
0;1;0;64;List(0, 1, 1)
1;2;65;65;List(0, 1, 0)
0;2;65;65;List(0, 1, 0)
2;3;1;65534;List(0, 0, 0)
#register: R863;R864;R6;
#end
#automata:
#states: 7
#init: 0
#final: 6,3,5,0,4,1,2,
#transitons: 
1;5;82;88;List(0, 0, 0, 0, 0, 0, 0)
3;1;0;79;List(0, 1, 0, 1, 0, 1, 1)
4;5;1;65534;List(0, 0, 0, 0, 0, 0, 0)
3;1;91;127;List(0, 1, 0, 1, 0, 1, 1)
3;5;81;89;List(0, 0, 0, 0, 0, 0, 0)
2;1;0;79;List(0, 1, 0, 1, 0, 1, 1)
3;4;80;90;List(0, 1, 0, 0, 0, 0, 0)
1;5;94;65532;List(0, 0, 0, 0, 0, 0, 0)
0;2;0;127;List(0, 1, 1, 1, 0, 0, 0)
3;5;93;65533;List(0, 0, 0, 0, 0, 0, 0)
0;1;0;79;List(0, 1, 0, 1, 0, 1, 1)
1;6;1;78;List(0, 1, 0, 1, 0, 0, 0)
2;5;1;78;List(0, 0, 0, 0, 0, 0, 0)
5;5;0;127;List(0, 0, 0, 0, 0, 0, 0)
1;4;2;77;List(0, 1, 0, 0, 0, 0, 0)
3;4;92;65534;List(0, 1, 0, 0, 0, 0, 0)
2;3;0;127;List(0, 1, 0, 1, 1, 1, 0)
1;1;0;79;List(0, 1, 0, 1, 0, 1, 1)
2;5;92;65534;List(0, 0, 0, 0, 0, 0, 0)
3;3;0;127;List(0, 1, 0, 1, 1, 1, 0)
3;4;1;78;List(0, 1, 0, 0, 0, 0, 0)
1;1;91;127;List(0, 1, 0, 1, 0, 1, 1)
6;4;1;65534;List(0, 1, 0, 0, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0, 0, 0)
2;5;80;90;List(0, 0, 0, 0, 0, 0, 0)
0;1;91;127;List(0, 1, 0, 1, 0, 1, 1)
1;6;80;90;List(0, 1, 0, 1, 0, 0, 0)
6;6;0;127;List(0, 1, 0, 1, 0, 0, 0)
1;6;92;65534;List(0, 1, 0, 1, 0, 0, 0)
2;1;91;127;List(0, 1, 0, 1, 0, 1, 1)
2;2;0;127;List(0, 1, 1, 1, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0, 0, 0)
0;3;0;127;List(0, 1, 0, 1, 1, 1, 0)
6;5;2;65533;List(0, 0, 0, 0, 0, 0, 0)
1;5;3;76;List(0, 0, 0, 0, 0, 0, 0)
1;4;81;89;List(0, 1, 0, 0, 0, 0, 0)
3;5;2;77;List(0, 0, 0, 0, 0, 0, 0)
1;4;93;65533;List(0, 1, 0, 0, 0, 0, 0)
#register: R865;R866;R840;R841;R802;R803;R804;
#end
#automata:
#states: 6
#init: 0
#final: 3,4,5,
#transitons: 
4;5;1;65534;List(0, 0, 0, 0, 0)
1;3;80;80;List(0, 1, 0, 1, 0)
2;1;0;79;List(0, 1, 0, 1, 1)
2;3;80;80;List(0, 1, 0, 1, 0)
3;3;0;127;List(0, 1, 0, 1, 0)
0;1;81;127;List(0, 1, 0, 1, 1)
3;5;2;65533;List(0, 0, 0, 0, 0)
0;2;0;127;List(0, 1, 1, 1, 0)
2;1;81;127;List(0, 1, 0, 1, 1)
3;4;1;65534;List(0, 1, 0, 0, 0)
5;5;0;127;List(0, 0, 0, 0, 0)
2;2;0;127;List(0, 1, 1, 1, 0)
0;1;0;79;List(0, 1, 0, 1, 1)
1;1;0;79;List(0, 1, 0, 1, 1)
1;1;81;127;List(0, 1, 0, 1, 1)
0;0;0;127;List(1, 1, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
0;3;80;80;List(0, 1, 0, 1, 0)
#register: R867;R868;R844;R845;R796;
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;112;112;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;98;98;List()
#register: 
#end
$
