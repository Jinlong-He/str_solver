declare: Set(P17, R264, P6, R248, R269, P15, P13, R258, R252, R266, P45, P60, R273, P16, R263, T2, P12, R0, R255, P5, R254, P14, T3, T1, P1, R267, R8, R279, R261, R257, R249, P61, P55, R272, R260, R276, R251, R275, R282, P2, R281, R270, T0)
#intconstraints:
P61 != 0 & P60 + -1*P55 != 0 & P55 + -1*P14 != 0 & P55 + -1*P12 != 0 & P55 + -1*P6 != 0 & P45 + -1*P17 != 0 & P17 + -1*P16 != 0 & P15 != 0 & P13 != 0 & P5 >= 0 & P2 + -1*P1 + -1 >= 0 & P2 + -10 >= 0 & P1 >= 0 & ((P2 + -10) >= 0) & ((((((R292 + -1 * (10 + (P2 + -10))) = 0) & ((P2 + -1 * R292) >= 0)) | (((R292 + -1 * P2) = 0) & ((((10 + (P2 + -10)) + -1 * T3) + -1) >= 0))) & ((R291 + -1 * 10) = 0)) | ((((-11 >= 0) | ((P2 + -10) = 0)) | ((10 + -1 * P2) >= 0)) & (T3 = 0))) & ((P2 + -10) >= 0) & (((((R290 + -1 * (10 + (P2 + -10))) = 0) & ((P2 + -1 * R290) >= 0)) | (((R290 + -1 * P2) = 0) & ((((10 + (P2 + -10)) + -1 * T3) + -1) >= 0))) & ((R289 + -1 * 10) = 0)) & (((-1 >= 0) | (P5 = 0)) | (-1 * T3 >= 0)) & (((-1 >= 0) | (-1 * 0 = 0)) | (-1 * 0 >= 0)) & (P1 >= 0) & (((((R288 + -1 * P1) = 0) & ((P2 + -1 * R288) >= 0)) | (((R288 + -1 * P2) = 0) & (((P1 + -1 * P15) + -1) >= 0))) | (((P1 = 0) | (P2 = 0)) & (P15 = 0))) & (P1 >= 0) & (((((R287 + -1 * P1) = 0) & ((P2 + -1 * R287) >= 0)) | (((R287 + -1 * P2) = 0) & (((P1 + -1 * P15) + -1) >= 0))) | (((P1 = 0) | (P2 = 0)) & (P15 = 0))) & (((P2 + -1 * P1) + -1) >= 0) & (((((R286 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R286) >= 0)) | (((R286 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P13) + -1) >= 0))) & ((R285 + -1 * (P1 + 1)) = 0)) & (((P2 + -1 * P1) + -1) >= 0) & ((((((R284 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R284) >= 0)) | (((R284 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P13) + -1) >= 0))) & ((R283 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P13 = 0))) & ((R0 + -1 * (R281 + R282)) = 0) & ((R280 + -1 * T3) = 0) & ((R279 + -1 * T2) = 0) & ((P1 + -1 * R278) = 0) & (P1 >= 0) & ((P5 + -1 * R6) = 0) & (P5 >= 0) & (0 = 0) & (0 = 0) & (0 = 0) & ((R5 + -1 * T1) = 0) & ((R4 + -1 * T0) = 0) & ((R3 + -1 * P2) = 0) & ((R2 + -1 * P13) = 0) & ((R1 + -1 * P15) = 0) & ((R0 + -1 * P61) = 0) & (((R8 + -1 * R273) = 0) & (((R8 + -1 * R260) = 0) & (((R248 + -1 * R248) = 0) & (((R263 + -1 * R264) = 0) & (((R255 + -1 * R8) = 0) & (((R269 + -1 * R270) = 0) & (((R257 + -1 * R257) = 0) & (((R4 + -1 * R4) = 0) & (((R263 + -1 * R263) = 0) & (((R272 + -1 * R272) = 0) & (((R281 + -1 * R281) = 0) & (((R251 + -1 * R251) = 0) & (((R281 + -1 * R279) = 0) & (((R2 + -1 * R2) = 0) & (((R8 + -1 * R272) = 0) & (((R8 + -1 * R275) = 0) & (((R8 + -1 * R266) = 0) & (((R260 + -1 * R260) = 0) & (((R8 + -1 * R248) = 0) & (((R8 + -1 * R267) = 0) & (((R8 + -1 * R257) = 0) & (((R5 + -1 * R5) = 0) & (((R8 + -1 * R261) = 0) & (((R280 + -1 * R280) = 0) & (((R8 + -1 * R258) = 0) & (((R255 + -1 * R255) = 0) & (((R8 + -1 * R249) = 0) & (((R255 + -1 * R254) = 0) & (((R8 + -1 * R276) = 0) & (((R269 + -1 * R8) = 0) & (((R263 + -1 * R8) = 0) & (((R266 + -1 * R266) = 0) & (((R252 + -1 * R8) = 0) & (((R275 + -1 * R275) = 0) & (((R254 + -1 * R254) = 0) & (((R252 + -1 * R251) = 0) & (((R0 + -1 * R0) = 0) & (((R281 + -1 * R282) = 0) & (((R8 + -1 * R8) = 0) & (((R1 + -1 * R1) = 0) & (((R269 + -1 * R269) = 0) & (((R252 + -1 * R252) = 0) & (((R8 + -1 * R273) = 0) & (((R8 + -1 * R260) = 0) & (((R248 + -1 * R248) = 0) & (((R263 + -1 * R264) = 0) & (((R255 + -1 * R8) = 0) & (((R269 + -1 * R270) = 0) & (((R257 + -1 * R257) = 0) & (((R4 + -1 * R4) = 0) & (((R263 + -1 * R263) = 0) & (((R272 + -1 * R272) = 0) & (((R281 + -1 * R281) = 0) & (((R251 + -1 * R251) = 0) & (((R281 + -1 * R279) = 0) & (((R2 + -1 * R2) = 0) & (((R8 + -1 * R272) = 0) & (((R8 + -1 * R275) = 0) & (((R8 + -1 * R266) = 0) & (((R260 + -1 * R260) = 0) & (((R8 + -1 * R248) = 0) & (((R8 + -1 * R267) = 0) & (((R8 + -1 * R257) = 0) & (((R5 + -1 * R5) = 0) & (((R8 + -1 * R261) = 0) & (((R280 + -1 * R280) = 0) & (((R8 + -1 * R258) = 0) & (((R255 + -1 * R255) = 0) & (((R8 + -1 * R249) = 0) & (((R255 + -1 * R254) = 0) & (((R8 + -1 * R276) = 0) & (((R269 + -1 * R8) = 0) & (((R263 + -1 * R8) = 0) & (((R266 + -1 * R266) = 0) & (((R252 + -1 * R8) = 0) & (((R275 + -1 * R275) = 0) & (((R254 + -1 * R254) = 0) & (((R252 + -1 * R251) = 0) & (((R0 + -1 * R0) = 0) & (((R281 + -1 * R282) = 0) & (((R8 + -1 * R8) = 0) & (((R1 + -1 * R1) = 0) & (((R269 + -1 * R269) = 0) & (((R252 + -1 * R252) = 0) & TRUE)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) & TRUE
$
#automata:
#states: 6
#init: 0
#final: 1,4,5,
#transitons: 
4;1;59;127;List()
5;1;0;46;List()
2;0;48;57;List()
0;0;0;43;List()
3;0;0;43;List()
0;1;44;44;List()
3;0;45;46;List()
2;3;47;47;List()
1;4;58;58;List()
3;0;59;127;List()
5;1;59;127;List()
2;0;45;46;List()
2;0;59;127;List()
4;1;48;57;List()
3;0;48;57;List()
3;2;58;58;List()
5;4;58;58;List()
2;2;58;58;List()
4;4;58;58;List()
5;1;48;57;List()
2;0;0;43;List()
0;2;58;58;List()
1;1;0;57;List()
0;0;59;127;List()
0;0;45;57;List()
4;1;0;46;List()
1;1;59;127;List()
3;1;44;44;List()
4;5;47;47;List()
2;1;44;44;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R3;
#end
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;0;0;43;List(1)
1;1;0;127;List(0)
0;1;44;44;List(0)
0;0;45;127;List(1)
#register: R278;
#end
#automata:
#states: 12
#init: 0
#final: 7,8,2,0,4,9,6,5,1,3,10,
#transitons: 
7;1;91;103;List(0, 1, 1)
1;1;59;64;List(0, 1, 1)
9;3;60;63;List(0, 0, 0)
7;3;44;44;List(0, 0, 0)
0;1;45;57;List(0, 1, 1)
9;3;65;90;List(0, 0, 0)
6;3;110;65534;List(0, 0, 0)
9;3;92;113;List(0, 0, 0)
10;1;91;115;List(0, 1, 1)
10;3;44;44;List(0, 0, 0)
10;1;117;127;List(0, 1, 1)
5;3;46;56;List(0, 0, 0)
8;3;58;58;List(0, 0, 0)
4;1;59;64;List(0, 1, 1)
9;3;44;44;List(0, 0, 0)
7;1;105;127;List(0, 1, 1)
2;4;111;111;List(0, 1, 1)
2;3;65;90;List(0, 0, 0)
5;1;45;57;List(0, 1, 1)
10;3;65;90;List(0, 0, 0)
4;3;65;90;List(0, 0, 0)
2;1;59;64;List(0, 1, 1)
10;11;116;116;List(0, 1, 1)
10;3;46;56;List(0, 0, 0)
10;1;0;43;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
6;3;92;106;List(0, 0, 0)
11;1;0;43;List(0, 1, 1)
4;5;99;99;List(0, 1, 1)
4;3;46;56;List(0, 0, 0)
4;3;44;44;List(0, 0, 0)
1;3;44;44;List(0, 0, 0)
6;1;59;64;List(0, 1, 1)
5;3;92;95;List(0, 0, 0)
2;1;45;57;List(0, 1, 1)
5;1;59;64;List(0, 1, 1)
6;1;45;57;List(0, 1, 1)
8;1;0;43;List(0, 1, 1)
7;3;92;102;List(0, 0, 0)
9;3;58;58;List(0, 0, 0)
8;1;59;64;List(0, 1, 1)
2;1;112;127;List(0, 1, 1)
6;1;91;107;List(0, 1, 1)
11;1;91;127;List(0, 1, 1)
9;1;59;64;List(0, 1, 1)
2;3;46;56;List(0, 0, 0)
1;3;60;63;List(0, 0, 0)
1;1;91;127;List(0, 1, 1)
2;1;0;43;List(0, 1, 1)
6;1;0;43;List(0, 1, 1)
7;3;106;65534;List(0, 0, 0)
2;3;113;65534;List(0, 0, 0)
6;7;108;108;List(0, 1, 1)
7;3;1;42;List(0, 0, 0)
10;3;1;42;List(0, 0, 0)
0;1;59;64;List(0, 1, 1)
2;1;91;110;List(0, 1, 1)
7;3;46;56;List(0, 0, 0)
9;1;45;57;List(0, 1, 1)
0;1;0;43;List(0, 1, 1)
8;1;45;57;List(0, 1, 1)
6;3;60;63;List(0, 0, 0)
10;1;59;64;List(0, 1, 1)
1;3;65;90;List(0, 0, 0)
5;3;65;90;List(0, 0, 0)
5;1;98;127;List(0, 1, 1)
7;3;60;63;List(0, 0, 0)
5;3;58;58;List(0, 0, 0)
1;1;45;57;List(0, 1, 1)
7;8;104;104;List(0, 1, 1)
0;1;91;107;List(0, 1, 1)
6;1;109;127;List(0, 1, 1)
9;10;115;115;List(0, 1, 1)
1;1;0;43;List(0, 1, 1)
4;1;100;127;List(0, 1, 1)
4;1;91;98;List(0, 1, 1)
6;3;58;58;List(0, 0, 0)
4;1;45;57;List(0, 1, 1)
9;3;46;56;List(0, 0, 0)
0;2;108;108;List(0, 1, 1)
5;3;1;42;List(0, 0, 0)
6;3;46;56;List(0, 0, 0)
4;3;60;63;List(0, 0, 0)
1;3;92;65534;List(0, 0, 0)
2;3;44;44;List(0, 0, 0)
7;1;0;43;List(0, 1, 1)
4;1;0;43;List(0, 1, 1)
8;3;44;44;List(0, 0, 0)
1;3;46;56;List(0, 0, 0)
2;3;60;63;List(0, 0, 0)
4;3;101;65534;List(0, 0, 0)
8;9;111;111;List(0, 1, 1)
10;3;58;58;List(0, 0, 0)
8;3;113;65534;List(0, 0, 0)
2;3;92;109;List(0, 0, 0)
10;3;60;63;List(0, 0, 0)
3;3;0;127;List(0, 0, 0)
2;3;58;58;List(0, 0, 0)
0;1;109;127;List(0, 1, 1)
2;3;1;42;List(0, 0, 0)
11;1;59;64;List(0, 1, 1)
4;3;58;58;List(0, 0, 0)
7;3;58;58;List(0, 0, 0)
9;3;1;42;List(0, 0, 0)
7;1;59;64;List(0, 1, 1)
5;3;99;65534;List(0, 0, 0)
6;3;1;42;List(0, 0, 0)
5;1;91;96;List(0, 1, 1)
10;1;45;57;List(0, 1, 1)
9;1;116;127;List(0, 1, 1)
5;6;97;97;List(0, 1, 1)
8;1;91;110;List(0, 1, 1)
1;3;58;58;List(0, 0, 0)
9;1;91;114;List(0, 1, 1)
5;1;0;43;List(0, 1, 1)
10;3;92;114;List(0, 0, 0)
7;1;45;57;List(0, 1, 1)
8;3;46;56;List(0, 0, 0)
9;3;117;65534;List(0, 0, 0)
1;3;1;42;List(0, 0, 0)
10;3;118;65534;List(0, 0, 0)
8;3;60;63;List(0, 0, 0)
9;1;0;43;List(0, 1, 1)
8;1;112;127;List(0, 1, 1)
8;3;65;90;List(0, 0, 0)
6;3;65;90;List(0, 0, 0)
11;1;45;57;List(0, 1, 1)
4;3;1;42;List(0, 0, 0)
6;3;44;44;List(0, 0, 0)
5;3;44;44;List(0, 0, 0)
8;3;92;109;List(0, 0, 0)
5;3;60;63;List(0, 0, 0)
8;3;1;42;List(0, 0, 0)
7;3;65;90;List(0, 0, 0)
4;3;92;97;List(0, 0, 0)
#register: R283;R284;R2;
#end
#automata:
#states: 6
#init: 0
#final: 1,3,4,5,
#transitons: 
0;3;92;127;List(0, 1, 1)
4;5;1;65534;List(0, 0, 0)
3;4;0;127;List(0, 1, 0)
4;4;0;127;List(0, 1, 0)
1;5;1;65534;List(0, 0, 0)
3;5;1;65534;List(0, 0, 0)
0;1;0;90;List(0, 1, 1)
5;5;0;127;List(0, 0, 0)
1;4;0;127;List(0, 1, 0)
0;2;91;91;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
#register: R285;R286;R5;
#end
#automata:
#states: 12
#init: 0
#final: 5,9,6,4,1,0,2,7,10,8,3,
#transitons: 
5;1;59;64;List(1, 1)
8;2;60;63;List(0, 0)
9;2;1;56;List(0, 0)
4;2;101;65534;List(0, 0)
6;2;60;63;List(0, 0)
0;1;59;64;List(1, 1)
7;1;0;57;List(1, 1)
10;1;0;57;List(1, 1)
9;10;115;115;List(1, 1)
3;4;111;111;List(1, 1)
7;2;60;63;List(0, 0)
6;2;110;65534;List(0, 0)
5;2;58;58;List(0, 0)
3;2;92;109;List(0, 0)
4;2;58;58;List(0, 0)
8;1;59;64;List(1, 1)
3;1;0;57;List(1, 1)
0;2;1;56;List(0, 0)
3;2;1;56;List(0, 0)
3;2;58;58;List(0, 0)
0;3;108;108;List(1, 1)
10;2;65;90;List(0, 0)
2;2;0;127;List(0, 0)
7;1;91;103;List(1, 1)
8;2;65;90;List(0, 0)
1;2;65;90;List(0, 0)
10;2;60;63;List(0, 0)
6;2;92;106;List(0, 0)
7;2;58;58;List(0, 0)
10;2;92;114;List(0, 0)
0;1;109;127;List(1, 1)
10;2;58;58;List(0, 0)
8;1;112;127;List(1, 1)
4;1;91;98;List(1, 1)
9;1;59;64;List(1, 1)
4;2;65;90;List(0, 0)
3;1;91;110;List(1, 1)
5;1;91;96;List(1, 1)
5;2;99;65534;List(0, 0)
11;1;59;64;List(1, 1)
4;2;60;63;List(0, 0)
10;1;117;127;List(1, 1)
7;8;104;104;List(1, 1)
1;1;91;127;List(1, 1)
5;1;0;57;List(1, 1)
0;2;65;90;List(0, 0)
1;2;58;58;List(0, 0)
6;2;65;90;List(0, 0)
4;1;100;127;List(1, 1)
5;1;98;127;List(1, 1)
6;1;91;107;List(1, 1)
9;2;58;58;List(0, 0)
4;1;0;57;List(1, 1)
4;2;1;56;List(0, 0)
3;2;113;65534;List(0, 0)
3;1;112;127;List(1, 1)
3;1;59;64;List(1, 1)
1;1;59;64;List(1, 1)
0;2;92;106;List(0, 0)
5;2;60;63;List(0, 0)
7;2;106;65534;List(0, 0)
9;1;0;57;List(1, 1)
9;2;117;65534;List(0, 0)
3;2;60;63;List(0, 0)
3;2;65;90;List(0, 0)
7;1;59;64;List(1, 1)
6;1;109;127;List(1, 1)
8;9;111;111;List(1, 1)
10;1;59;64;List(1, 1)
0;1;0;57;List(1, 1)
1;2;60;63;List(0, 0)
6;1;0;57;List(1, 1)
0;1;91;107;List(1, 1)
4;1;59;64;List(1, 1)
8;2;92;109;List(0, 0)
4;2;92;97;List(0, 0)
8;1;91;110;List(1, 1)
11;1;0;57;List(1, 1)
8;2;113;65534;List(0, 0)
1;2;92;65534;List(0, 0)
8;2;58;58;List(0, 0)
9;1;116;127;List(1, 1)
7;2;1;56;List(0, 0)
8;1;0;57;List(1, 1)
5;6;97;97;List(1, 1)
7;1;105;127;List(1, 1)
5;2;65;90;List(0, 0)
1;1;0;57;List(1, 1)
10;2;118;65534;List(0, 0)
5;2;92;95;List(0, 0)
5;2;1;56;List(0, 0)
9;2;65;90;List(0, 0)
10;1;91;115;List(1, 1)
9;2;92;113;List(0, 0)
11;1;91;127;List(1, 1)
9;2;60;63;List(0, 0)
10;11;116;116;List(1, 1)
8;2;1;56;List(0, 0)
10;2;1;56;List(0, 0)
1;2;1;56;List(0, 0)
0;2;58;58;List(0, 0)
6;1;59;64;List(1, 1)
6;7;108;108;List(1, 1)
0;2;110;65534;List(0, 0)
6;2;1;56;List(0, 0)
7;2;92;102;List(0, 0)
0;2;60;63;List(0, 0)
9;1;91;114;List(1, 1)
6;2;58;58;List(0, 0)
4;5;99;99;List(1, 1)
7;2;65;90;List(0, 0)
#register: R287;R1;
#end
#automata:
#states: 6
#init: 0
#final: 1,3,4,5,
#transitons: 
0;1;0;90;List(1, 1)
4;4;0;127;List(1, 0)
1;4;0;127;List(1, 0)
3;4;0;127;List(1, 0)
1;5;1;65534;List(0, 0)
4;5;1;65534;List(0, 0)
0;3;92;127;List(1, 1)
5;5;0;127;List(0, 0)
3;5;1;65534;List(0, 0)
0;2;91;91;List(1, 1)
#register: R288;R4;
#end
#automata:
#states: 4
#init: 0
#final: 2,3,
#transitons: 
3;3;0;127;List(0, 0, 0)
2;2;0;127;List(0, 1, 0)
0;2;47;47;List(0, 1, 0)
2;3;1;65534;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
1;1;0;46;List(0, 1, 1)
1;1;48;127;List(0, 1, 1)
0;1;48;127;List(0, 1, 1)
1;2;47;47;List(0, 1, 0)
0;1;0;46;List(0, 1, 1)
#register: R289;R290;R6;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,2,
#transitons: 
1;2;1;65534;List(0, 0, 0)
2;2;0;127;List(0, 0, 0)
0;1;0;127;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
1;1;0;127;List(0, 1, 1)
#register: R291;R292;R280;
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;122;122;List()
#register: 
#end
$
