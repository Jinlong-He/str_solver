declare: Set(T2, P2, P41, P50, P4, P5, P43, P6, P1, T0, P48, T1, P49)
#intconstraints:
P50 + -1*P4 != 0 & P49 != 0 & P48 != 0 & -1*P43 + -1 >= 0 & -1*P41 + -1 >= 0 & P6 + -1*P5 + -1 >= 0 & P5 + -2 >= 0 & P2 + -1*P1 + -1 >= 0 & P1 + -1 >= 0 & (((P2 + -1 * P1) + -1) >= 0) & ((((((R126 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R126) >= 0)) | (((R126 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R125 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P6 = 0))) & (((P2 + -1 * P1) + -1) >= 0) & ((((((R124 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R124) >= 0)) | (((R124 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R123 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P6 = 0))) & (((P2 + -1 * P1) + -1) >= 0) & ((((((R122 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R122) >= 0)) | (((R122 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R121 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P6 = 0))) & (((P2 + -1 * P1) + -1) >= 0) & ((((((R120 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R120) >= 0)) | (((R120 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R119 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P6 = 0))) & (((P2 + -1 * P1) + -1) >= 0) & (((((R118 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R118) >= 0)) | (((R118 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R117 + -1 * (P1 + 1)) = 0)) & (((P2 + -1 * P1) + -1) >= 0) & (((((R116 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R116) >= 0)) | (((R116 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R115 + -1 * (P1 + 1)) = 0)) & (((P2 + -1 * P1) + -1) >= 0) & ((((((R114 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R114) >= 0)) | (((R114 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R113 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P6 = 0))) & (((P2 + -1 * P1) + -1) >= 0) & ((((((R112 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R112) >= 0)) | (((R112 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P6) + -1) >= 0))) & ((R111 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P6 = 0))) & ((P6 + -1 * P5) >= 0) & ((((((R110 + -1 * (P5 + (P6 + -1 * P5))) = 0) & ((P6 + -1 * R110) >= 0)) | (((R110 + -1 * P6) = 0) & ((((P5 + (P6 + -1 * P5)) + -1 * P49) + -1) >= 0))) & ((R109 + -1 * P5) = 0)) | (((((-1 * P5 + -1) >= 0) | ((P6 + -1 * P5) = 0)) | ((P5 + -1 * P6) >= 0)) & (P49 = 0))) & ((P6 + -1 * P5) >= 0) & ((((((R108 + -1 * (P5 + (P6 + -1 * P5))) = 0) & ((P6 + -1 * R108) >= 0)) | (((R108 + -1 * P6) = 0) & ((((P5 + (P6 + -1 * P5)) + -1 * P49) + -1) >= 0))) & ((R107 + -1 * P5) = 0)) | (((((-1 * P5 + -1) >= 0) | ((P6 + -1 * P5) = 0)) | ((P5 + -1 * P6) >= 0)) & (P49 = 0))) & (P1 >= 0) & (((((R106 + -1 * P1) = 0) & ((P2 + -1 * R106) >= 0)) | (((R106 + -1 * P2) = 0) & (((P1 + -1 * T2) + -1) >= 0))) | (((P1 = 0) | (P2 = 0)) & (T2 = 0))) & (2 >= 0) & (((((R105 + -1 * 2) = 0) & ((P6 + -1 * R105) >= 0)) | (((R105 + -1 * P6) = 0) & (((2 + -1 * T1) + -1) >= 0))) | (((2 = 0) | (P6 = 0)) & (T1 = 0))) & ((P5 + -2) >= 0) & ((((((R104 + -1 * (2 + (P5 + -2))) = 0) & ((P6 + -1 * R104) >= 0)) | (((R104 + -1 * P6) = 0) & ((((2 + (P5 + -2)) + -1 * P48) + -1) >= 0))) & ((R103 + -1 * 2) = 0)) | ((((-3 >= 0) | ((P5 + -2) = 0)) | ((2 + -1 * P6) >= 0)) & (P48 = 0))) & (1 >= 0) & (((((R102 + -1 * 1) = 0) & ((P49 + -1 * R102) >= 0)) | (((R102 + -1 * P49) = 0) & (((1 + -1 * T0) + -1) >= 0))) | (((1 = 0) | (P49 = 0)) & (T0 = 0))) & ((R101 + -1 * T2) = 0) & ((R100 + -1 * T1) = 0) & ((R99 + -1 * T0) = 0) & ((P1 + -1 * R70) = 0) & (P1 >= 0) & (P5 >= 0) & ((R12 + -1 * P5) = 0) & (2 >= 0) & ((R11 + -1 * 2) = 0) & ((P41 + -1 * -1) = 0) & (2 >= 0) & ((2 + -1 * R7) >= 0) & ((P43 + -1 * -1) = 0) & (2 >= 0) & ((2 + -1 * R4) >= 0) & ((R3 + -1 * P2) = 0) & ((R2 + -1 * P6) = 0) & ((R1 + -1 * P48) = 0) & ((R0 + -1 * P49) = 0) & (((R100 + -1 * R100) = 0) & (((R1 + -1 * R1) = 0) & (((R0 + -1 * R0) = 0) & (((R2 + -1 * R2) = 0) & (((R101 + -1 * R101) = 0) & (((R99 + -1 * R99) = 0) & (((R100 + -1 * R100) = 0) & (((R1 + -1 * R1) = 0) & (((R0 + -1 * R0) = 0) & (((R2 + -1 * R2) = 0) & (((R101 + -1 * R101) = 0) & (((R99 + -1 * R99) = 0) & TRUE)))))))))))) & TRUE
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R3;
#end
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;0;0;57;List(1)
1;1;0;127;List(0)
0;1;58;58;List(0)
0;0;59;127;List(1)
#register: R70;
#end
#automata:
#states: 6
#init: 0
#final: 4,5,
#transitons: 
5;5;0;127;List(0, 0)
3;4;112;112;List(1, 1)
2;3;116;116;List(1, 1)
4;5;0;127;List(0, 0)
1;2;116;116;List(1, 1)
0;1;104;104;List(1, 1)
#register: R106;R101;
#end
#automata:
#states: 5
#init: 0
#final: 2,4,1,0,3,
#transitons: 
2;3;37;61;List(0, 0, 0, 0, 0)
3;3;0;127;List(0, 0, 0, 0, 0)
1;3;38;60;List(0, 0, 0, 0, 0)
0;1;64;127;List(0, 1, 0, 1, 1)
2;1;36;62;List(0, 1, 0, 1, 1)
2;3;63;63;List(0, 0, 0, 0, 0)
1;3;2;32;List(0, 0, 0, 0, 0)
2;3;65;65534;List(0, 0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0)
1;4;37;61;List(0, 1, 0, 0, 0)
2;3;1;33;List(0, 0, 0, 0, 0)
1;3;66;65533;List(0, 0, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
2;3;35;35;List(0, 0, 0, 0, 0)
1;1;0;34;List(0, 1, 0, 1, 1)
1;4;63;63;List(0, 1, 0, 0, 0)
1;4;65;65534;List(0, 1, 0, 0, 0)
1;4;1;33;List(0, 1, 0, 0, 0)
0;2;0;127;List(0, 1, 1, 1, 0)
1;1;64;127;List(0, 1, 0, 1, 1)
1;1;36;62;List(0, 1, 0, 1, 1)
1;4;35;35;List(0, 1, 0, 0, 0)
2;1;0;34;List(0, 1, 0, 1, 1)
2;1;64;127;List(0, 1, 0, 1, 1)
0;1;36;62;List(0, 1, 0, 1, 1)
2;2;0;127;List(0, 1, 1, 1, 0)
4;3;1;65534;List(0, 0, 0, 0, 0)
0;1;0;34;List(0, 1, 0, 1, 1)
#register: R111;R112;R109;R110;R0;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,2,
#transitons: 
1;1;0;127;List(0, 1, 1)
2;2;0;127;List(0, 0, 0)
1;2;1;65534;List(0, 0, 0)
0;1;0;127;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
#register: R113;R114;R2;
#end
#automata:
#states: 5
#init: 0
#final: 3,4,
#transitons: 
0;3;47;47;List(0, 1, 0, 0)
2;2;0;127;List(0, 1, 1, 1)
0;2;0;127;List(0, 1, 1, 1)
0;0;0;127;List(1, 1, 0, 0)
0;1;48;127;List(0, 1, 0, 1)
0;1;0;46;List(0, 1, 0, 1)
1;1;48;127;List(0, 1, 0, 1)
4;4;0;127;List(0, 0, 0, 0)
1;3;47;47;List(0, 1, 0, 0)
2;3;47;47;List(0, 1, 0, 0)
3;3;0;127;List(0, 1, 0, 0)
2;1;0;46;List(0, 1, 0, 1)
3;4;1;65534;List(0, 0, 0, 0)
1;1;0;46;List(0, 1, 0, 1)
2;1;48;127;List(0, 1, 0, 1)
#register: R115;R116;R11;R12;
#end
#automata:
#states: 5
#init: 0
#final: 2,3,4,
#transitons: 
0;0;0;127;List(1, 1, 0, 0)
3;4;1;65534;List(0, 0, 0, 0)
1;2;47;47;List(0, 1, 1, 1)
0;1;47;47;List(0, 1, 1, 1)
3;3;0;127;List(0, 1, 0, 0)
2;3;0;127;List(0, 1, 0, 0)
2;4;1;65534;List(0, 0, 0, 0)
4;4;0;127;List(0, 0, 0, 0)
#register: R117;R118;R105;R100;
#end
#automata:
#states: 5
#init: 0
#final: 3,1,0,4,2,
#transitons: 
1;1;94;127;List(0, 1, 0, 1, 1)
4;4;0;127;List(0, 1, 0, 0, 0)
1;4;1;89;List(0, 1, 0, 0, 0)
1;4;95;65534;List(0, 1, 0, 0, 0)
2;3;93;93;List(0, 0, 0, 0, 0)
0;2;0;127;List(0, 1, 1, 1, 0)
1;4;91;91;List(0, 1, 0, 0, 0)
1;3;2;88;List(0, 0, 0, 0, 0)
1;3;96;65533;List(0, 0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0)
0;1;94;127;List(0, 1, 0, 1, 1)
2;1;94;127;List(0, 1, 0, 1, 1)
0;1;0;90;List(0, 1, 0, 1, 1)
1;4;93;93;List(0, 1, 0, 0, 0)
0;1;92;92;List(0, 1, 0, 1, 1)
2;1;92;92;List(0, 1, 0, 1, 1)
1;1;0;90;List(0, 1, 0, 1, 1)
3;3;0;127;List(0, 0, 0, 0, 0)
1;1;92;92;List(0, 1, 0, 1, 1)
4;3;1;65534;List(0, 0, 0, 0, 0)
2;2;0;127;List(0, 1, 1, 1, 0)
2;3;95;65534;List(0, 0, 0, 0, 0)
2;3;91;91;List(0, 0, 0, 0, 0)
2;1;0;90;List(0, 1, 0, 1, 1)
2;3;1;89;List(0, 0, 0, 0, 0)
#register: R119;R120;R103;R104;R1;
#end
#automata:
#states: 7
#init: 0
#final: 2,3,5,6,0,1,
#transitons: 
6;6;0;127;List(0, 0, 0, 0, 0, 0)
1;3;1;65534;List(0, 1, 0, 1, 0, 0)
0;3;49;65534;List(0, 1, 0, 1, 0, 0)
5;5;0;127;List(0, 1, 0, 0, 0, 0)
1;6;3;65532;List(0, 0, 0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0, 0)
2;6;50;65533;List(0, 0, 0, 0, 0, 0)
3;3;0;127;List(0, 1, 0, 1, 0, 0)
2;1;48;127;List(0, 1, 0, 1, 1, 1)
1;1;0;127;List(0, 1, 0, 1, 1, 1)
3;5;1;65534;List(0, 1, 0, 0, 0, 0)
4;1;0;127;List(0, 1, 0, 1, 1, 1)
0;3;1;45;List(0, 1, 0, 1, 0, 0)
2;2;0;127;List(0, 1, 1, 1, 0, 0)
0;2;0;127;List(0, 1, 1, 1, 0, 0)
1;5;2;65533;List(0, 1, 0, 0, 0, 0)
2;4;47;47;List(0, 1, 0, 1, 1, 1)
5;6;1;65534;List(0, 0, 0, 0, 0, 0)
2;3;49;65534;List(0, 1, 0, 1, 0, 0)
2;6;2;44;List(0, 0, 0, 0, 0, 0)
0;1;0;46;List(0, 1, 0, 1, 1, 1)
0;4;47;47;List(0, 1, 0, 1, 1, 1)
2;3;1;45;List(0, 1, 0, 1, 0, 0)
2;1;0;46;List(0, 1, 0, 1, 1, 1)
3;6;2;65533;List(0, 0, 0, 0, 0, 0)
0;1;48;127;List(0, 1, 0, 1, 1, 1)
#register: R121;R122;R107;R108;R102;R99;
#end
#automata:
#states: 5
#init: 0
#final: 0,1,2,4,
#transitons: 
2;2;0;127;List(0, 1, 1)
0;3;63;63;List(0, 1, 0)
2;1;64;127;List(0, 1, 0)
1;3;63;63;List(0, 1, 0)
1;1;64;127;List(0, 1, 0)
0;2;0;127;List(0, 1, 1)
3;3;0;127;List(0, 1, 0)
1;4;1;61;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
1;4;65;65534;List(0, 0, 0)
2;4;1;61;List(0, 0, 0)
2;3;63;63;List(0, 1, 0)
2;4;65;65534;List(0, 0, 0)
2;1;0;62;List(0, 1, 0)
1;1;0;62;List(0, 1, 0)
4;4;0;127;List(0, 0, 0)
0;1;0;62;List(0, 1, 0)
0;1;64;127;List(0, 1, 0)
#register: R123;R124;R7;
#end
#automata:
#states: 5
#init: 0
#final: 0,1,2,4,
#transitons: 
3;3;0;127;List(0, 1, 0)
1;4;1;33;List(0, 0, 0)
2;4;37;65534;List(0, 0, 0)
0;3;35;35;List(0, 1, 0)
0;1;0;34;List(0, 1, 0)
0;0;0;127;List(1, 1, 0)
1;1;0;34;List(0, 1, 0)
0;2;0;127;List(0, 1, 1)
1;3;35;35;List(0, 1, 0)
1;4;37;65534;List(0, 0, 0)
2;1;36;127;List(0, 1, 0)
2;3;35;35;List(0, 1, 0)
1;1;36;127;List(0, 1, 0)
0;1;36;127;List(0, 1, 0)
4;4;0;127;List(0, 0, 0)
2;1;0;34;List(0, 1, 0)
2;4;1;33;List(0, 0, 0)
2;2;0;127;List(0, 1, 1)
#register: R125;R126;R4;
#end
$
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;91;127;List()
0;0;0;64;List()
#register: 
#end
$
