declare: Set(P3, P1, P24, P25, P28, T5, P29, P5, P27, T4, P19, P55, P58, P22, P23, P26, P59, P57)
#intconstraints:
P59 + -1*P28 != 0 & P59 + -1*P27 != 0 & P59 + -1*P26 != 0 & P59 + -1*P25 != 0 & P59 + -1*P24 != 0 & P59 + -1*P23 != 0 & P58 + -1*P28 != 0 & P58 + -1*P27 != 0 & P58 + -1*P26 != 0 & P58 + -1*P25 != 0 & P58 + -1*P24 != 0 & P58 + -1*P23 != 0 & P57 != 0 & P29 + -1*P28 != 0 & P29 + -1*P27 != 0 & P29 + -1*P26 != 0 & P29 + -1*P25 != 0 & P29 + -1*P24 != 0 & P29 + -1*P23 != 0 & P28 + -1*P22 != 0 & P27 + -1*P22 != 0 & P26 + -1*P22 != 0 & P25 + -1*P22 != 0 & P24 + -1*P22 != 0 & P23 + -1*P22 != 0 & P19 != 0 & P55 + -1*P1 + -1 >= 0 & P55 + -1 >= 0 & -1*P5 + P3 + -1 >= 0 & P5 + 1 >= 0 & P3 + -1 >= 0 & P1 >= 0 & ((((((R84 + -1 * (0 + P1)) = 0) & ((P55 + -1 * R84) >= 0)) | (((R84 + -1 * P55) = 0) & ((((0 + P1) + -1 * P55) + -1) >= 0))) & (R83 = 0)) | ((((-1 >= 0) | (P1 = 0)) | (-1 * P55 >= 0)) & (P3 = 0))) & (((((R82 + -1 * (0 + P1)) = 0) & ((P55 + -1 * R82) >= 0)) | (((R82 + -1 * P55) = 0) & ((((0 + P1) + -1 * P55) + -1) >= 0))) & (R81 = 0)) & ((((((R80 + -1 * (0 + P1)) = 0) & ((P55 + -1 * R80) >= 0)) | (((R80 + -1 * P55) = 0) & ((((0 + P1) + -1 * P55) + -1) >= 0))) & (R79 = 0)) | ((((-1 >= 0) | (P1 = 0)) | (-1 * P55 >= 0)) & (P3 = 0))) & ((((((R78 + -1 * (0 + P1)) = 0) & ((P55 + -1 * R78) >= 0)) | (((R78 + -1 * P55) = 0) & ((((0 + P1) + -1 * P55) + -1) >= 0))) & (R77 = 0)) | ((((-1 >= 0) | (P1 = 0)) | (-1 * P55 >= 0)) & (P3 = 0))) & ((((((R76 + -1 * (0 + P1)) = 0) & ((P55 + -1 * R76) >= 0)) | (((R76 + -1 * P55) = 0) & ((((0 + P1) + -1 * P55) + -1) >= 0))) & (R75 = 0)) | ((((-1 >= 0) | (P1 = 0)) | (-1 * P55 >= 0)) & (P3 = 0))) & ((((((R74 + -1 * (0 + P1)) = 0) & ((P55 + -1 * R74) >= 0)) | (((R74 + -1 * P55) = 0) & ((((0 + P1) + -1 * P55) + -1) >= 0))) & (R73 = 0)) | ((((-1 >= 0) | (P1 = 0)) | (-1 * P55 >= 0)) & (P3 = 0))) & (((((R72 + -1 * (0 + P1)) = 0) & ((P55 + -1 * R72) >= 0)) | (((R72 + -1 * P55) = 0) & ((((0 + P1) + -1 * P55) + -1) >= 0))) & (R71 = 0)) & ((((((R70 + -1 * (0 + (P5 + 1))) = 0) & ((P3 + -1 * R70) >= 0)) | (((R70 + -1 * P3) = 0) & ((((0 + (P5 + 1)) + -1 * P3) + -1) >= 0))) & (R69 = 0)) | ((((-1 >= 0) | ((P5 + 1) = 0)) | (-1 * P3 >= 0)) & (T5 = 0))) & ((((((R68 + -1 * (0 + (P5 + 1))) = 0) & ((P3 + -1 * R68) >= 0)) | (((R68 + -1 * P3) = 0) & ((((0 + (P5 + 1)) + -1 * P3) + -1) >= 0))) & (R67 = 0)) | ((((-1 >= 0) | ((P5 + 1) = 0)) | (-1 * P3 >= 0)) & (T5 = 0))) & (((((R66 + -1 * ((P5 + 1) + ((-1 * P5 + P3) + -1))) = 0) & ((P3 + -1 * R66) >= 0)) | (((R66 + -1 * P3) = 0) & (((((P5 + 1) + ((-1 * P5 + P3) + -1)) + -1 * P3) + -1) >= 0))) & ((R65 + -1 * (P5 + 1)) = 0)) & ((((((R64 + -1 * ((P5 + 1) + ((-1 * P5 + P3) + -1))) = 0) & ((P3 + -1 * R64) >= 0)) | (((R64 + -1 * P3) = 0) & (((((P5 + 1) + ((-1 * P5 + P3) + -1)) + -1 * P3) + -1) >= 0))) & ((R63 + -1 * (P5 + 1)) = 0)) | (((((-1 * (P5 + 1) + -1) >= 0) | (((-1 * P5 + P3) + -1) = 0)) | (((P5 + 1) + -1 * P3) >= 0)) & (T4 = 0))) & ((((((R62 + -1 * ((P1 + 1) + ((P55 + -1 * P1) + -1))) = 0) & ((P55 + -1 * R62) >= 0)) | (((R62 + -1 * P55) = 0) & (((((P1 + 1) + ((P55 + -1 * P1) + -1)) + -1 * P55) + -1) >= 0))) & ((R61 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P55 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P55) >= 0)) & (P57 = 0))) & ((R60 + -1 * T5) = 0) & ((R59 + -1 * T4) = 0) & ((R10 + -1 * P1) = 0) & (-1 * 0 >= 0) & (R9 = 0) & ((P5 + -1 * -1) = 0) & (-1 * 0 >= 0) & (-1 * R5 >= 0) & (0 = 0) & (-1 * 0 >= 0) & (-1 * R4 >= 0) & ((R3 + -1 * P55) = 0) & ((R2 + -1 * P3) = 0) & ((R1 + -1 * P19) = 0) & ((R0 + -1 * P57) = 0) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;61;61;List()
0;0;0;43;List()
1;1;0;43;List()
0;0;62;127;List()
1;1;45;127;List()
0;0;45;60;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R3;
#end
#automata:
#states: 3
#init: 0
#final: 2,
#transitons: 
2;2;0;127;List(0, 0)
1;2;61;61;List(0, 0)
1;1;62;127;List(0, 1)
1;1;0;60;List(0, 1)
0;1;62;127;List(0, 1)
0;2;61;61;List(0, 0)
0;0;0;127;List(1, 1)
0;1;0;60;List(0, 1)
#register: R9;R10;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,2,
#transitons: 
1;2;0;127;List(0, 0, 0)
0;1;0;127;List(0, 1, 1)
1;1;0;127;List(0, 1, 1)
2;2;0;127;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
#register: R61;R62;R0;
#end
#automata:
#states: 3
#init: 0
#final: 2,
#transitons: 
0;1;84;127;List(0, 1)
0;2;83;83;List(0, 1)
2;2;0;127;List(0, 0)
1;2;83;83;List(0, 1)
1;1;0;64;List(0, 1)
2;2;0;64;List(0, 1)
2;2;83;127;List(0, 1)
0;0;0;127;List(1, 1)
1;1;84;127;List(0, 1)
0;1;0;64;List(0, 1)
#register: R71;R72;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,2,
#transitons: 
2;2;0;127;List(0, 0, 0)
1;2;0;127;List(0, 0, 0)
0;1;0;127;List(0, 1, 1)
1;1;0;127;List(0, 1, 1)
0;0;0;127;List(1, 1, 0)
#register: R73;R74;R2;
#end
#automata:
#states: 5
#init: 0
#final: 0,4,3,1,2,
#transitons: 
4;3;0;127;List(0, 0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0, 0)
3;3;0;127;List(0, 0, 0, 0, 0)
1;4;0;127;List(0, 1, 0, 0, 0)
0;2;0;127;List(0, 1, 1, 1, 0)
2;2;0;127;List(0, 1, 1, 1, 0)
2;3;0;127;List(0, 0, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
1;1;0;127;List(0, 1, 0, 1, 1)
0;1;0;127;List(0, 1, 0, 1, 1)
1;3;0;127;List(0, 0, 0, 0, 0)
2;1;0;127;List(0, 1, 0, 1, 1)
#register: R75;R76;R63;R64;R59;
#end
#automata:
#states: 5
#init: 0
#final: 4,1,2,3,0,
#transitons: 
0;0;0;127;List(1, 1, 0, 0, 0)
1;2;0;127;List(0, 1, 0, 1, 1)
1;1;0;127;List(0, 1, 1, 1, 0)
2;4;0;127;List(0, 1, 0, 0, 0)
0;2;0;127;List(0, 1, 0, 1, 1)
2;2;0;127;List(0, 1, 0, 1, 1)
1;3;0;127;List(0, 0, 0, 0, 0)
3;3;0;127;List(0, 0, 0, 0, 0)
2;3;0;127;List(0, 0, 0, 0, 0)
4;3;0;127;List(0, 0, 0, 0, 0)
0;1;0;127;List(0, 1, 1, 1, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
#register: R77;R78;R67;R68;R60;
#end
#automata:
#states: 5
#init: 0
#final: 0,1,2,4,
#transitons: 
0;1;0;82;List(0, 1, 0)
3;3;0;127;List(0, 1, 0)
0;3;83;83;List(0, 1, 0)
1;1;0;127;List(0, 0, 0)
1;1;0;82;List(0, 1, 0)
0;0;0;127;List(1, 1, 0)
1;3;83;83;List(0, 1, 0)
1;1;84;127;List(0, 1, 0)
2;4;0;127;List(0, 0, 0)
2;1;84;127;List(0, 1, 0)
4;4;0;127;List(0, 0, 0)
2;3;83;83;List(0, 1, 0)
2;2;0;127;List(0, 1, 1)
0;1;84;127;List(0, 1, 0)
2;1;0;82;List(0, 1, 0)
0;2;0;127;List(0, 1, 1)
#register: R79;R80;R5;
#end
#automata:
#states: 5
#init: 0
#final: 3,4,
#transitons: 
3;3;87;127;List(0, 1, 0, 1)
0;0;0;127;List(1, 1, 0, 0)
0;3;87;87;List(0, 1, 0, 1)
2;1;0;82;List(0, 1, 0, 1)
0;1;88;127;List(0, 1, 0, 1)
1;3;87;87;List(0, 1, 0, 1)
2;3;87;87;List(0, 1, 0, 1)
3;3;0;127;List(0, 1, 0, 0)
0;1;0;82;List(0, 1, 0, 1)
2;1;88;127;List(0, 1, 0, 1)
1;1;88;127;List(0, 1, 0, 1)
2;2;0;127;List(0, 1, 1, 1)
1;1;0;82;List(0, 1, 0, 1)
3;4;0;127;List(0, 0, 0, 0)
4;4;0;127;List(0, 0, 0, 0)
0;2;0;127;List(0, 1, 1, 1)
3;3;0;82;List(0, 1, 0, 1)
#register: R81;R82;R65;R66;
#end
#automata:
#states: 6
#init: 0
#final: 3,2,1,4,5,0,
#transitons: 
0;1;0;82;List(0, 1, 0, 1)
3;3;88;127;List(0, 1, 0, 1)
2;1;88;127;List(0, 1, 0, 1)
2;1;0;82;List(0, 1, 0, 1)
1;4;83;83;List(0, 1, 0, 1)
1;3;83;83;List(0, 1, 0, 1)
1;1;0;127;List(0, 1, 0, 0)
0;2;0;127;List(0, 1, 1, 1)
0;0;0;127;List(1, 1, 0, 0)
0;1;88;127;List(0, 1, 0, 1)
2;3;83;83;List(0, 1, 0, 1)
2;2;0;127;List(0, 1, 1, 1)
1;1;88;127;List(0, 1, 0, 1)
0;3;83;83;List(0, 1, 0, 1)
3;5;0;127;List(0, 0, 0, 0)
3;3;0;83;List(0, 1, 0, 1)
4;5;0;127;List(0, 0, 0, 0)
5;5;0;127;List(0, 0, 0, 0)
1;1;0;82;List(0, 1, 0, 1)
3;3;0;127;List(0, 1, 0, 0)
2;4;83;83;List(0, 1, 0, 1)
1;5;0;127;List(0, 0, 0, 0)
2;5;0;127;List(0, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0)
0;4;83;83;List(0, 1, 0, 1)
#register: R83;R84;R69;R70;
#end
$
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;91;127;List()
0;0;45;64;List()
0;0;0;43;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R1;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,
#transitons: 
1;2;61;61;List(0)
1;1;62;127;List(0)
2;2;0;127;List(0)
0;1;0;60;List(0)
0;2;61;61;List(0)
0;1;62;127;List(0)
0;0;0;127;List(1)
1;1;0;60;List(0)
#register: R4;
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;115;115;List()
#register: 
#end
$
