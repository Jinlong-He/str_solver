declare: ArrayBuffer(P4, P2, P1)
#intconstraints:
P4 != 0 & P2 + -1*P1 + -1 >= 0 & P2 + -1 >= 0 & P1 >= 0 & ((R8 + -1 * (P1 + -1 * 1)) = 0) & (R7 = 0) & ((R6 + -1 * (((P2 + -1 * P1) + -1) + -1 * 1)) = 0) & ((R5 + -1 * (P1 + 1)) = 0) & ((R4 + -1 * P2) = 0) & ((R3 + -1 * P4) = 0) & ((R1 + -1 * P1) = 0) & (-1 * 0 >= 0) & (R0 = 0) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;0;59;127;List()
0;1;58;58;List()
1;1;0;127;List()
0;0;0;57;List()
#register: 
#end
#automata:
#states: 3
#init: 0
#final: 2,
#transitons: 
0;0;0;127;List(1, 1)
2;2;0;127;List(0, 0)
1;1;59;127;List(0, 1)
0;1;59;127;List(0, 1)
0;2;58;58;List(0, 0)
1;1;0;57;List(0, 1)
1;2;58;58;List(0, 0)
0;1;0;57;List(0, 1)
#register: R0;R1;
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R4;
#end
#automata:
#states: 3
#init: 0
#final: 1,2,
#transitons: 
2;2;0;127;List(0, 0, 0)
1;2;0;127;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
1;1;0;127;List(0, 1, 1)
0;1;0;127;List(0, 0, 1)
#register: R5;R6;R3;
#end
#automata:
#states: 3
#init: 0
#final: 2,
#transitons: 
0;1;86;127;List(0, 0)
0;2;85;85;List(0, 0)
1;1;86;127;List(0, 1)
2;2;0;127;List(0, 0)
1;2;85;85;List(0, 1)
1;1;0;64;List(0, 1)
2;2;0;64;List(0, 1)
2;2;85;127;List(0, 1)
0;1;0;64;List(0, 0)
0;0;0;127;List(1, 1)
#register: R7;R8;
#end
$
