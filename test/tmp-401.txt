declare: Set(P1, P24, P25, P28, P60, P2, T7, P29, P27, P58, P30, P23, T6, P4, P26, P61, P59, P6, P57, P20)
#intconstraints:
P61 + -1*P29 != 0 & P61 + -1*P28 != 0 & P61 + -1*P27 != 0 & P61 + -1*P26 != 0 & P61 + -1*P25 != 0 & P61 + -1*P24 != 0 & P60 + -1*P29 != 0 & P60 + -1*P28 != 0 & P60 + -1*P27 != 0 & P60 + -1*P26 != 0 & P60 + -1*P25 != 0 & P60 + -1*P24 != 0 & P59 + -1*P29 != 0 & P59 + -1*P28 != 0 & P59 + -1*P27 != 0 & P59 + -1*P26 != 0 & P59 + -1*P25 != 0 & P59 + -1*P24 != 0 & P58 + -1*P29 != 0 & P58 + -1*P28 != 0 & P58 + -1*P27 != 0 & P58 + -1*P26 != 0 & P58 + -1*P25 != 0 & P58 + -1*P24 != 0 & P57 != 0 & P30 + -1*P29 != 0 & P30 + -1*P28 != 0 & P30 + -1*P27 != 0 & P30 + -1*P26 != 0 & P30 + -1*P25 != 0 & P30 + -1*P24 != 0 & P29 + -1*P23 != 0 & P28 + -1*P23 != 0 & P27 + -1*P23 != 0 & P26 + -1*P23 != 0 & P25 + -1*P23 != 0 & P24 + -1*P23 != 0 & P20 != 0 & -1*P6 + P4 + -1 >= 0 & P6 + 1 >= 0 & P4 + -1 >= 0 & P2 + -1*P1 + -1 >= 0 & P2 + -1 >= 0 & P1 >= 0 & (((((R92 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R92) >= 0)) | (((R92 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P2) + -1) >= 0))) & ((R91 + -1 * (P1 + 1)) = 0)) & ((((((R90 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R90) >= 0)) | (((R90 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P2) + -1) >= 0))) & ((R89 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P4 = 0))) & ((((((R88 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R88) >= 0)) | (((R88 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P2) + -1) >= 0))) & ((R87 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P4 = 0))) & ((((((R86 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R86) >= 0)) | (((R86 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P2) + -1) >= 0))) & ((R85 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P4 = 0))) & ((((((R84 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R84) >= 0)) | (((R84 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P2) + -1) >= 0))) & ((R83 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P4 = 0))) & (((((R82 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R82) >= 0)) | (((R82 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P2) + -1) >= 0))) & ((R81 + -1 * (P1 + 1)) = 0)) & ((((((R80 + -1 * ((P1 + 1) + ((P2 + -1 * P1) + -1))) = 0) & ((P2 + -1 * R80) >= 0)) | (((R80 + -1 * P2) = 0) & (((((P1 + 1) + ((P2 + -1 * P1) + -1)) + -1 * P2) + -1) >= 0))) & ((R79 + -1 * (P1 + 1)) = 0)) | (((((-1 * (P1 + 1) + -1) >= 0) | (((P2 + -1 * P1) + -1) = 0)) | (((P1 + 1) + -1 * P2) >= 0)) & (P4 = 0))) & ((((((R78 + -1 * (0 + (P6 + 1))) = 0) & ((P4 + -1 * R78) >= 0)) | (((R78 + -1 * P4) = 0) & ((((0 + (P6 + 1)) + -1 * P4) + -1) >= 0))) & (R77 = 0)) | ((((-1 >= 0) | ((P6 + 1) = 0)) | (-1 * P4 >= 0)) & (T7 = 0))) & ((((((R76 + -1 * (0 + (P6 + 1))) = 0) & ((P4 + -1 * R76) >= 0)) | (((R76 + -1 * P4) = 0) & ((((0 + (P6 + 1)) + -1 * P4) + -1) >= 0))) & (R75 = 0)) | ((((-1 >= 0) | ((P6 + 1) = 0)) | (-1 * P4 >= 0)) & (T7 = 0))) & ((((((R74 + -1 * (0 + P1)) = 0) & ((P2 + -1 * R74) >= 0)) | (((R74 + -1 * P2) = 0) & ((((0 + P1) + -1 * P2) + -1) >= 0))) & (R73 = 0)) | ((((-1 >= 0) | (P1 = 0)) | (-1 * P2 >= 0)) & (P57 = 0))) & ((((((R72 + -1 * (0 + P1)) = 0) & ((P2 + -1 * R72) >= 0)) | (((R72 + -1 * P2) = 0) & ((((0 + P1) + -1 * P2) + -1) >= 0))) & (R71 = 0)) | ((((-1 >= 0) | (P1 = 0)) | (-1 * P2 >= 0)) & (P57 = 0))) & ((((((R70 + -1 * ((P6 + 1) + ((-1 * P6 + P4) + -1))) = 0) & ((P4 + -1 * R70) >= 0)) | (((R70 + -1 * P4) = 0) & (((((P6 + 1) + ((-1 * P6 + P4) + -1)) + -1 * P4) + -1) >= 0))) & ((R69 + -1 * (P6 + 1)) = 0)) | (((((-1 * (P6 + 1) + -1) >= 0) | (((-1 * P6 + P4) + -1) = 0)) | (((P6 + 1) + -1 * P4) >= 0)) & (T6 = 0))) & (((((R68 + -1 * ((P6 + 1) + ((-1 * P6 + P4) + -1))) = 0) & ((P4 + -1 * R68) >= 0)) | (((R68 + -1 * P4) = 0) & (((((P6 + 1) + ((-1 * P6 + P4) + -1)) + -1 * P4) + -1) >= 0))) & ((R67 + -1 * (P6 + 1)) = 0)) & ((R66 + -1 * T7) = 0) & ((R65 + -1 * T6) = 0) & ((R10 + -1 * P1) = 0) & (-1 * 0 >= 0) & (R9 = 0) & ((P6 + -1 * -1) = 0) & (-1 * 0 >= 0) & (-1 * R5 >= 0) & (0 = 0) & (-1 * 0 >= 0) & (-1 * R4 >= 0) & ((R3 + -1 * P2) = 0) & ((R2 + -1 * P4) = 0) & ((R1 + -1 * P20) = 0) & ((R0 + -1 * P57) = 0) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;0;62;127;List()
1;1;0;43;List()
1;1;45;127;List()
0;0;0;43;List()
0;0;45;60;List()
0;1;61;61;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R3;
#end
#automata:
#states: 3
#init: 0
#final: 2,
#transitons: 
2;2;0;127;List(0, 0)
1;2;61;61;List(0, 0)
0;1;62;127;List(0, 1)
0;0;0;127;List(1, 1)
1;1;62;127;List(0, 1)
1;1;0;60;List(0, 1)
0;1;0;60;List(0, 1)
0;2;61;61;List(0, 0)
#register: R9;R10;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,2,
#transitons: 
1;2;0;127;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
2;2;0;127;List(0, 0, 0)
1;1;0;127;List(0, 1, 1)
0;1;0;127;List(0, 1, 1)
#register: R71;R72;R0;
#end
#automata:
#states: 2
#init: 0
#final: 0,1,
#transitons: 
0;1;0;64;List(0, 1)
1;1;0;127;List(0, 0)
0;1;91;127;List(0, 1)
1;1;91;127;List(0, 1)
0;0;0;127;List(1, 1)
1;1;0;64;List(0, 1)
#register: R73;R74;
#end
#automata:
#states: 5
#init: 0
#final: 3,2,0,1,4,
#transitons: 
3;3;0;127;List(0, 0, 0, 0, 0)
2;2;0;127;List(0, 1, 0, 1, 1)
2;3;0;127;List(0, 0, 0, 0, 0)
0;1;0;127;List(0, 1, 1, 1, 0)
1;1;0;127;List(0, 1, 1, 1, 0)
0;2;0;127;List(0, 1, 0, 1, 1)
2;4;0;127;List(0, 1, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0, 0)
4;3;0;127;List(0, 0, 0, 0, 0)
1;2;0;127;List(0, 1, 0, 1, 1)
0;0;0;127;List(1, 1, 0, 0, 0)
1;3;0;127;List(0, 0, 0, 0, 0)
#register: R79;R80;R77;R78;R66;
#end
#automata:
#states: 3
#init: 0
#final: 2,
#transitons: 
1;1;0;64;List(0, 1)
1;2;67;67;List(0, 1)
0;2;67;67;List(0, 1)
0;0;0;127;List(1, 1)
2;2;67;127;List(0, 1)
2;2;0;64;List(0, 1)
1;1;68;127;List(0, 1)
0;1;68;127;List(0, 1)
2;2;0;127;List(0, 0)
0;1;0;64;List(0, 1)
#register: R81;R82;
#end
#automata:
#states: 5
#init: 0
#final: 4,2,0,1,3,
#transitons: 
1;1;0;127;List(0, 1, 1, 1, 0)
3;4;0;127;List(0, 0, 0, 0, 0)
1;4;0;127;List(0, 0, 0, 0, 0)
3;3;0;127;List(0, 1, 0, 0, 0)
2;3;0;127;List(0, 1, 0, 0, 0)
2;4;0;127;List(0, 0, 0, 0, 0)
2;2;0;127;List(0, 1, 0, 1, 1)
1;2;0;127;List(0, 1, 0, 1, 1)
0;1;0;127;List(0, 1, 1, 1, 0)
4;4;0;127;List(0, 0, 0, 0, 0)
0;2;0;127;List(0, 1, 0, 1, 1)
0;0;0;127;List(1, 1, 0, 0, 0)
#register: R83;R84;R69;R70;R65;
#end
#automata:
#states: 6
#init: 0
#final: 2,4,3,1,5,0,
#transitons: 
2;4;67;67;List(0, 1, 0, 1)
3;3;0;67;List(0, 1, 0, 1)
2;5;0;127;List(0, 0, 0, 0)
4;4;0;127;List(0, 1, 0, 0)
0;1;77;127;List(0, 1, 0, 1)
1;1;0;66;List(0, 1, 0, 1)
1;1;0;127;List(0, 1, 0, 0)
2;1;0;66;List(0, 1, 0, 1)
0;2;0;127;List(0, 1, 1, 1)
0;1;0;66;List(0, 1, 0, 1)
0;4;67;67;List(0, 1, 0, 1)
0;3;67;67;List(0, 1, 0, 1)
2;3;67;67;List(0, 1, 0, 1)
1;4;67;67;List(0, 1, 0, 1)
3;3;77;127;List(0, 1, 0, 1)
4;5;0;127;List(0, 0, 0, 0)
3;5;0;127;List(0, 0, 0, 0)
1;1;77;127;List(0, 1, 0, 1)
0;0;0;127;List(1, 1, 0, 0)
2;1;77;127;List(0, 1, 0, 1)
2;2;0;127;List(0, 1, 1, 1)
5;5;0;127;List(0, 0, 0, 0)
3;3;0;127;List(0, 1, 0, 0)
1;3;67;67;List(0, 1, 0, 1)
1;5;0;127;List(0, 0, 0, 0)
#register: R85;R86;R75;R76;
#end
#automata:
#states: 5
#init: 0
#final: 0,1,2,4,
#transitons: 
1;3;67;67;List(0, 1, 0)
0;1;68;127;List(0, 1, 0)
1;1;68;127;List(0, 1, 0)
2;4;0;127;List(0, 0, 0)
2;3;67;67;List(0, 1, 0)
0;1;0;66;List(0, 1, 0)
2;1;0;66;List(0, 1, 0)
3;3;0;127;List(0, 1, 0)
2;1;68;127;List(0, 1, 0)
0;3;67;67;List(0, 1, 0)
4;4;0;127;List(0, 0, 0)
0;2;0;127;List(0, 1, 1)
2;2;0;127;List(0, 1, 1)
1;1;0;127;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
1;1;0;66;List(0, 1, 0)
#register: R87;R88;R5;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,2,
#transitons: 
2;2;0;127;List(0, 0, 0)
1;1;0;127;List(0, 1, 1)
0;1;0;127;List(0, 1, 1)
1;2;0;127;List(0, 0, 0)
0;0;0;127;List(1, 1, 0)
#register: R89;R90;R2;
#end
#automata:
#states: 5
#init: 0
#final: 3,4,
#transitons: 
3;3;0;66;List(0, 1, 0, 1)
0;3;76;76;List(0, 1, 0, 1)
4;4;0;127;List(0, 0, 0, 0)
0;0;0;127;List(1, 1, 0, 0)
2;2;0;127;List(0, 1, 1, 1)
3;4;0;127;List(0, 0, 0, 0)
3;3;0;127;List(0, 1, 0, 0)
2;1;0;66;List(0, 1, 0, 1)
2;3;76;76;List(0, 1, 0, 1)
1;1;77;127;List(0, 1, 0, 1)
0;1;0;66;List(0, 1, 0, 1)
2;1;77;127;List(0, 1, 0, 1)
0;2;0;127;List(0, 1, 1, 1)
1;1;0;66;List(0, 1, 0, 1)
3;3;76;127;List(0, 1, 0, 1)
0;1;77;127;List(0, 1, 0, 1)
1;3;76;76;List(0, 1, 0, 1)
#register: R91;R92;R67;R68;
#end
$
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;45;64;List()
0;0;0;43;List()
0;0;91;127;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R1;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,
#transitons: 
1;2;61;61;List(0)
0;0;0;127;List(1)
1;1;62;127;List(0)
0;2;61;61;List(0)
0;1;62;127;List(0)
2;2;0;127;List(0)
1;1;0;60;List(0)
0;1;0;60;List(0)
#register: R4;
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;99;99;List()
#register: 
#end
$
