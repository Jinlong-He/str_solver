declare: Set(P6, P0, P4, P5, P29, P61, P7, P8, P2, P19, P46, P9, P3)
#intconstraints:
P61 + -1*P46 != 0 & P61 + -1*P29 != 0 & P61 + -1*P19 != 0 & P9 + -1*P8 != 0 & P9 + -1*P7 != 0 & P9 + -1*P6 != 0 & P9 + -1*P5 != 0 & P9 + -1*P4 != 0 & P9 + -1*P3 != 0 & P8 + -1*P2 != 0 & P7 + -1*P2 != 0 & P6 + -1*P2 != 0 & P5 + -1*P2 != 0 & P4 + -1*P2 != 0 & P3 + -1*P2 != 0 & P0 != 0 & ((R4 + -1 * 1) = 0) & (R3 = 0) & ((R2 + -1 * P0) = 0) & ((R1 + -1 * (P0 + -1)) = 0) & ((R0 + -1 * P0) = 0) & TRUE 
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;45;127;List()
0;0;0;43;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R0;
#end
#automata:
#states: 3
#init: 0
#final: 1,2,
#transitons: 
1;2;0;127;List(0, 0)
1;1;0;127;List(0, 1)
0;1;0;127;List(0, 1)
0;0;0;127;List(1, 1)
2;2;0;127;List(0, 0)
#register: R1;R2;
#end
#automata:
#states: 3
#init: 0
#final: 1,2,
#transitons: 
1;1;0;127;List(0, 1)
0;0;0;127;List(1, 1)
2;2;0;127;List(0, 0)
0;1;0;127;List(0, 1)
1;2;0;127;List(0, 0)
#register: R3;R4;
#end
$

