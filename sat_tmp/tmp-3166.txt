declare: Set(P20, R3, R6, P2, R4, R0, P19, P24, T0, R7, R5, P26, P23, P22, R2, T1, R8, T2, P0, P25)
#intconstraints:
P26 + -1*P25 != 0 & P26 + -1*P24 != 0 & P26 + -1*P23 != 0 & P26 + -1*P22 != 0 & P26 + -1*P20 != 0 & P26 + -1*P19 != 0 & P25 + -1*P22 != 0 & P24 + -1*P22 != 0 & P23 + -1*P22 != 0 & P22 + -1*P20 != 0 & P22 + -1*P19 != 0 & P20 + -1*P19 != 0 & P2 + -1 >= 0 & P0 + -1 >= 0 & (((-1 >= 0) | (-1 * (P2 + -1) >= 0)) | (-1 * P2 >= 0)) & (((((R10 + -1 * (0 + 1)) = 0) & ((P0 + -1 * R10) >= 0)) | (((R10 + -1 * P0) = 0) & ((((0 + 1) + -1 * P0) + -1) >= 0))) & (R9 = 0)) & ((((((R8 + -1 * (0 + 1)) = 0) & ((P2 + -1 * R8) >= 0)) | (((R8 + -1 * P2) = 0) & ((((0 + 1) + -1 * P2) + -1) >= 0))) & (R7 = 0)) | ((((-1 >= 0) | (-1 * 1 >= 0)) | (-1 * P2 >= 0)) & (T1 = 0))) & (((((R6 + -1 * ((P2 + -1) + 1)) = 0) & ((P2 + -1 * R6) >= 0)) | (((R6 + -1 * P2) = 0) & (((((P2 + -1) + 1) + -1 * P2) + -1) >= 0))) & ((R5 + -1 * (P2 + -1)) = 0)) & ((R4 + -1 * T2) = 0) & ((R3 + -1 * T1) = 0) & ((R2 + -1 * T0) = 0) & ((R1 + -1 * P0) = 0) & ((R0 + -1 * P2) = 0) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;10;10;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;32;32;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;11;11;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;13;13;List()
#register: 
#end
$
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R1;
#end
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;9;9;List(0, 1)
1;1;0;127;List(0, 0)
0;0;0;127;List(1, 1)
#register: R9;R10;
#end
$
