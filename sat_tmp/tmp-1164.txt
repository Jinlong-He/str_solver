declare: Set(T5, P82, R30, T7, T1, R5, R28, R23, P35, R9, P0, R10, R3, R21, P36, T2, P87, P75, P16, P10, T4, P76, R31, P12, R19, R1, R29, R13, P14, R2, T3, T8, P56, P4, R26, R20, R6, R27, R22, T0, R32, P2, R24, R0, P81, T6, R25)
#intconstraints:
P87 + -1*P75 != 0 & P82 != 0 & P81 + -1*P75 != 0 & P76 != 0 & P75 + -1*P56 != 0 & P36 + -1*P35 != 0 & -1*P16 + P2 + -1 >= 0 & P16 + 1 >= 0 & -1*P14 + P0 + -1 >= 0 & P14 + 1 >= 0 & -1*P12 + P10 + -1 >= 0 & P12 + 1 >= 0 & -1*P4 + P2 + -1 >= 0 & P4 + 1 >= 0 & P2 + -1 >= 0 & P0 + -10 >= 0 & (((((R34 + -1 * (10 + (P0 + -10))) = 0) & ((P0 + -1 * R34) >= 0)) | (((R34 + -1 * P0) = 0) & ((((10 + (P0 + -10)) + -1 * P0) + -1) >= 0))) & ((R33 + -1 * 10) = 0)) & ((((((R32 + -1 * ((P4 + 1) + ((-1 * P4 + P2) + -1))) = 0) & ((P2 + -1 * R32) >= 0)) | (((R32 + -1 * P2) = 0) & (((((P4 + 1) + ((-1 * P4 + P2) + -1)) + -1 * P2) + -1) >= 0))) & ((R31 + -1 * (P4 + 1)) = 0)) | (((((-1 * (P4 + 1) + -1) >= 0) | (-1 * ((-1 * P4 + P2) + -1) >= 0)) | (((P4 + 1) + -1 * P2) >= 0)) & (T4 = 0))) & ((((((R30 + -1 * ((P12 + 1) + ((-1 * P12 + P10) + -1))) = 0) & ((P10 + -1 * R30) >= 0)) | (((R30 + -1 * P10) = 0) & (((((P12 + 1) + ((-1 * P12 + P10) + -1)) + -1 * P10) + -1) >= 0))) & ((R29 + -1 * (P12 + 1)) = 0)) | (((((-1 * (P12 + 1) + -1) >= 0) | (-1 * ((-1 * P12 + P10) + -1) >= 0)) | (((P12 + 1) + -1 * P10) >= 0)) & (T1 = 0))) & ((((((R28 + -1 * (0 + 1)) = 0) & ((P2 + -1 * R28) >= 0)) | (((R28 + -1 * P2) = 0) & ((((0 + 1) + -1 * P2) + -1) >= 0))) & (R27 = 0)) | ((((-1 >= 0) | (-1 * 1 >= 0)) | (-1 * P2 >= 0)) & (T0 = 0))) & ((R26 + -1 * T8) = 0) & ((R25 + -1 * T7) = 0) & ((R24 + -1 * T6) = 0) & ((R23 + -1 * T5) = 0) & ((R22 + -1 * T4) = 0) & ((R21 + -1 * T3) = 0) & ((R20 + -1 * T2) = 0) & ((R19 + -1 * T1) = 0) & ((P14 + -1 * -1) = 0) & (-1 * 0 >= 0) & (-1 * R16 >= 0) & ((P4 + -1 * -1) = 0) & (-1 * 0 >= 0) & (-1 * R13 >= 0) & ((P16 + -1 * -1) = 0) & (-1 * 0 >= 0) & (-1 * R10 >= 0) & (0 = 0) & (-1 * 0 >= 0) & (-1 * R9 >= 0) & ((P12 + -1 * -1) = 0) & (-1 * 0 >= 0) & (-1 * R6 >= 0) & ((R5 + -1 * T0) = 0) & ((R4 + -1 * P0) = 0) & ((R3 + -1 * P2) = 0) & ((R2 + -1 * P10) = 0) & ((R1 + -1 * P76) = 0) & ((R0 + -1 * P82) = 0) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;98;98;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;32;32;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;97;97;List()
#register: 
#end
$
$
#automata:
#states: 11
#init: 0
#final: 10,
#transitons: 
10;10;0;127;List()
4;5;111;111;List()
8;9;47;47;List()
2;3;110;110;List()
1;2;111;111;List()
3;4;103;103;List()
7;8;58;58;List()
6;7;98;98;List()
9;10;47;47;List()
0;1;109;109;List()
5;6;100;100;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R4;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,
#transitons: 
0;0;0;127;List(1)
0;1;0;65;List(0)
1;1;67;127;List(0)
0;1;67;127;List(0)
0;2;66;66;List(0)
1;2;66;66;List(0)
1;1;0;65;List(0)
2;2;0;127;List(0)
#register: R16;
#end
#automata:
#states: 11
#init: 0
#final: 4,5,3,7,6,
#transitons: 
9;2;46;46;List(0, 1)
8;1;112;127;List(0, 1)
8;1;0;43;List(0, 1)
4;3;45;45;List(0, 1)
10;1;0;43;List(0, 1)
10;1;48;62;List(0, 1)
2;3;65;65;List(0, 1)
8;1;45;45;List(0, 1)
2;1;48;62;List(0, 1)
2;2;46;46;List(0, 1)
2;1;0;43;List(0, 1)
7;3;65;106;List(0, 1)
6;6;0;127;List(0, 0)
8;9;111;111;List(0, 1)
6;7;99;99;List(0, 1)
9;1;0;43;List(0, 1)
1;1;66;127;List(0, 1)
4;5;115;115;List(0, 1)
5;3;45;45;List(0, 1)
3;3;0;127;List(0, 0)
6;3;0;43;List(0, 1)
10;1;45;45;List(0, 1)
0;3;65;65;List(0, 1)
3;3;48;62;List(0, 1)
5;5;0;127;List(0, 0)
3;3;65;127;List(0, 1)
9;1;45;45;List(0, 1)
9;10;99;99;List(0, 1)
7;4;46;46;List(0, 1)
4;3;48;62;List(0, 1)
8;1;48;62;List(0, 1)
4;3;116;127;List(0, 1)
6;3;48;62;List(0, 1)
0;0;0;127;List(1, 1)
9;1;48;62;List(0, 1)
6;3;100;127;List(0, 1)
7;3;108;127;List(0, 1)
0;1;45;45;List(0, 1)
4;4;46;46;List(0, 1)
1;1;0;43;List(0, 1)
4;3;65;114;List(0, 1)
5;4;46;46;List(0, 1)
9;3;65;65;List(0, 1)
7;3;48;62;List(0, 1)
8;3;65;65;List(0, 1)
5;6;111;111;List(0, 1)
2;1;116;127;List(0, 1)
1;1;45;45;List(0, 1)
6;4;46;46;List(0, 1)
10;1;108;127;List(0, 1)
7;7;0;127;List(0, 0)
9;1;66;98;List(0, 1)
5;3;48;62;List(0, 1)
7;3;45;45;List(0, 1)
10;2;46;46;List(0, 1)
0;1;0;43;List(0, 1)
4;4;0;127;List(0, 0)
1;3;65;65;List(0, 1)
7;3;0;43;List(0, 1)
0;1;66;127;List(0, 1)
3;3;45;45;List(0, 1)
1;1;48;62;List(0, 1)
0;1;48;62;List(0, 1)
8;1;66;110;List(0, 1)
8;2;46;46;List(0, 1)
2;1;66;114;List(0, 1)
3;4;46;46;List(0, 1)
6;3;65;98;List(0, 1)
3;3;0;43;List(0, 1)
9;1;100;127;List(0, 1)
10;3;65;65;List(0, 1)
5;3;0;43;List(0, 1)
5;3;112;127;List(0, 1)
1;2;46;46;List(0, 1)
10;1;66;106;List(0, 1)
2;8;115;115;List(0, 1)
5;3;65;110;List(0, 1)
4;3;0;43;List(0, 1)
2;1;45;45;List(0, 1)
0;2;46;46;List(0, 1)
6;3;45;45;List(0, 1)
#register: R33;R34;
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;112;112;List()
#register: 
#end
$
