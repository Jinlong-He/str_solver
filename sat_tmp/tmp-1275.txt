declare: Set(P2, R31, P1, T0, R32, R4, R0, P39, R29, R30, R3, P38, T1)
#intconstraints:
-1*P39 + P38 >= 0 & P38 >= 0 & P2 + -1*P1 + -1 >= 0 & P1 + -1 >= 0 & (((((R34 + -1 * (0 + P1)) = 0) & ((P2 + -1 * R34) >= 0)) | (((R34 + -1 * P2) = 0) & ((((0 + P1) + -1 * P2) + -1) >= 0))) & (R33 = 0)) & (((((R32 + -1 * (0 + 2)) = 0) & ((P39 + -1 * R32) >= 0)) | (((R32 + -1 * P39) = 0) & ((((0 + 2) + -1 * P39) + -1) >= 0))) & (R31 = 0)) & ((R30 + -1 * T1) = 0) & ((R29 + -1 * T0) = 0) & ((R22 + -1 * P1) = 0) & (-1 * 0 >= 0) & (R21 = 0) & ((R4 + -1 * P38) = 0) & (2 >= 0) & ((R3 + -1 * 2) = 0) & ((R1 + -1 * P2) = 0) & ((R0 + -1 * P39) = 0) & TRUE
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R1;
#end
#automata:
#states: 3
#init: 0
#final: 2,
#transitons: 
0;1;59;127;List(0, 1)
0;0;0;127;List(1, 1)
2;2;0;127;List(0, 0)
1;2;58;58;List(0, 0)
0;2;58;58;List(0, 0)
0;1;0;57;List(0, 1)
1;1;59;127;List(0, 1)
1;1;0;57;List(0, 1)
#register: R21;R22;
#end
#automata:
#states: 5
#init: 0
#final: 4,
#transitons: 
0;1;104;104;List(0, 1)
0;0;0;127;List(1, 1)
3;4;112;112;List(0, 1)
1;2;116;116;List(0, 1)
2;3;116;116;List(0, 1)
4;4;0;127;List(0, 0)
#register: R33;R34;
#end
$
