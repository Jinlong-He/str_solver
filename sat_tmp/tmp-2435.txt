declare: Set(R11, P26, R8, P22, P24, R10, P0, R12, T3, P25, R9, T0, P21, P20, T1, T2, R6, R4, R1, R5, R3, P19, R0, P29, R13, P2)
#intconstraints:
P29 != 0 & P26 + -1*P25 != 0 & P26 + -1*P24 != 0 & P26 + -1*P22 != 0 & P26 + -1*P21 != 0 & P26 + -1*P20 != 0 & P26 + -1*P19 != 0 & P25 + -1*P24 != 0 & P24 + -1*P22 != 0 & P24 + -1*P21 != 0 & P24 + -1*P20 != 0 & P24 + -1*P19 != 0 & P22 + -1*P19 != 0 & P21 + -1*P19 != 0 & P20 + -1*P19 != 0 & P2 + -1 >= 0 & P0 + -1 >= 0 & (((((R15 + -1 * (0 + 1)) = 0) & ((P0 + -1 * R15) >= 0)) | (((R15 + -1 * P0) = 0) & ((((0 + 1) + -1 * P0) + -1) >= 0))) & (R14 = 0)) & ((((((R13 + -1 * (0 + 1)) = 0) & ((P2 + -1 * R13) >= 0)) | (((R13 + -1 * P2) = 0) & ((((0 + 1) + -1 * P2) + -1) >= 0))) & (R12 = 0)) | ((((-1 >= 0) | (-1 * 1 >= 0)) | (-1 * P2 >= 0)) & (T2 = 0))) & (((((R11 + -1 * ((P2 + -1) + 1)) = 0) & ((P2 + -1 * R11) >= 0)) | (((R11 + -1 * P2) = 0) & (((((P2 + -1) + 1) + -1 * P2) + -1) >= 0))) & ((R10 + -1 * (P2 + -1)) = 0)) & (((((R9 + -1 * (0 + 1)) = 0) & ((P29 + -1 * R9) >= 0)) | (((R9 + -1 * P29) = 0) & ((((0 + 1) + -1 * P29) + -1) >= 0))) & (R8 = 0)) & (0 = 0) & (-1 * 0 >= 0) & (-1 * R7 >= 0) & ((R6 + -1 * T3) = 0) & ((R5 + -1 * T2) = 0) & ((R4 + -1 * T1) = 0) & ((R3 + -1 * T0) = 0) & ((R2 + -1 * P0) = 0) & ((R1 + -1 * P2) = 0) & ((R0 + -1 * P29) = 0) & TRUE
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;45;127;List()
0;0;0;43;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R2;
#end
#automata:
#states: 3
#init: 0
#final: 0,1,
#transitons: 
2;2;0;127;List(0)
1;2;61;61;List(0)
0;0;0;127;List(1)
1;1;0;60;List(0)
1;1;62;127;List(0)
0;1;0;60;List(0)
0;1;62;127;List(0)
0;2;61;61;List(0)
#register: R7;
#end
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;0;0;127;List(1, 1)
1;1;0;127;List(0, 0)
0;1;13;13;List(0, 1)
#register: R14;R15;
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;9;9;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;10;10;List()
#register: 
#end
$
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;11;11;List()
#register: 
#end
$
