declare: Set(P7, P4, P5, P0, P8, R1, R2, P3, P6, T1, P2, T0)
#intconstraints:
P8 + -1*P2 != 0 & P7 + -1*P2 != 0 & P6 + -1*P2 != 0 & P5 + -1*P2 != 0 & P4 + -1*P3 != 0 & P4 + -1*P2 != 0 & P3 + -1*P2 != 0 & P0 != 0 & ((((((R6 + -1 * (0 + 1)) = 0) & ((P0 + -1 * R6) >= 0)) | (((R6 + -1 * P0) = 0) & ((((0 + 1) + -1 * P0) + -1) >= 0))) & (R5 = 0)) | ((((-1 >= 0) | (-1 * 1 >= 0)) | (-1 * P0 >= 0)) & (T1 = 0))) & (((((R4 + -1 * ((P0 + -1) + 1)) = 0) & ((P0 + -1 * R4) >= 0)) | (((R4 + -1 * P0) = 0) & (((((P0 + -1) + 1) + -1 * P0) + -1) >= 0))) & ((R3 + -1 * (P0 + -1)) = 0)) & ((R2 + -1 * T1) = 0) & ((R1 + -1 * T0) = 0) & ((R0 + -1 * P0) = 0) & TRUE
$
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;1;32;32;List()
#register: 
#end
$
$
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;43;List()
0;0;45;127;List()
#register: 
#end
#automata:
#states: 1
#init: 0
#final: 0,
#transitons: 
0;0;0;127;List(1)
#register: R0;
#end
#automata:
#states: 2
#init: 0
#final: 1,
#transitons: 
0;0;0;127;List(1, 1)
1;1;0;127;List(0, 0)
0;1;9;9;List(0, 1)
#register: R3;R4;
#end
#automata:
#states: 4
#init: 0
#final: 0,1,3,
#transitons: 
1;3;0;127;List(0, 0)
2;1;0;127;List(0, 1)
0;1;33;127;List(0, 1)
0;0;0;127;List(1, 1)
0;2;9;13;List(0, 1)
0;1;0;8;List(0, 1)
1;1;0;127;List(0, 1)
0;2;32;32;List(0, 1)
3;3;0;127;List(0, 0)
0;1;14;31;List(0, 1)
#register: R5;R6;
#end
$
